#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemBase

#include "Basic.hpp"

#include "BP_ItemBase_classes.hpp"
#include "BP_ItemBase_parameters.hpp"


namespace SDK
{

// Function BP_ItemBase.BP_ItemBase_C.GetItemCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_ItemCategory*                        ItemCategory_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemBase_C::GetItemCategory(EN_ItemCategory* ItemCategory_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "GetItemCategory");

	Params::BP_ItemBase_C_GetItemCategory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemCategory_0 != nullptr)
		*ItemCategory_0 = Parms.ItemCategory_0;
}


// Function BP_ItemBase.BP_ItemBase_C.TakeItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ItemBase_C::TakeItem(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "TakeItem");

	Params::BP_ItemBase_C_TakeItem Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemBase.BP_ItemBase_C.GetItemName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            ItemName_0                                             (Parm, OutParm)

void ABP_ItemBase_C::GetItemName(class FText* ItemName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "GetItemName");

	Params::BP_ItemBase_C_GetItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemName_0 != nullptr)
		*ItemName_0 = std::move(Parms.ItemName_0);
}


// Function BP_ItemBase.BP_ItemBase_C.TL_Destroy__FinishedFunc
// (BlueprintEvent)

void ABP_ItemBase_C::TL_Destroy__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "TL_Destroy__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.TL_Destroy__UpdateFunc
// (BlueprintEvent)

void ABP_ItemBase_C::TL_Destroy__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "TL_Destroy__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.TL_Destroy__Visibility__EventFunc
// (BlueprintEvent)

void ABP_ItemBase_C::TL_Destroy__Visibility__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "TL_Destroy__Visibility__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.InteractOutOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemBase_C::InteractOutOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "InteractOutOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemBase_C::Interact(class AActor* Actor, int32 SelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "Interact");

	Params::BP_ItemBase_C_Interact Parms{};

	Parms.Actor = Actor;
	Parms.SelectIndex = SelectIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemBase.BP_ItemBase_C.InteractInOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemBase_C::InteractInOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "InteractInOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ItemBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.BndEvt__BP_ItemBase_InteractArea_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ItemBase_C::BndEvt__BP_ItemBase_InteractArea_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "BndEvt__BP_ItemBase_InteractArea_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ItemBase_C_BndEvt__BP_ItemBase_InteractArea_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemBase.BP_ItemBase_C.TimeLimitDestory
// (BlueprintCallable, BlueprintEvent)

void ABP_ItemBase_C::TimeLimitDestory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "TimeLimitDestory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemBase.BP_ItemBase_C.SetOutlineSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableOutline                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_Outline_Type                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemBase_C::SetOutlineSetting(bool EnableOutline, Enum_Outline_Type Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "SetOutlineSetting");

	Params::BP_ItemBase_C_SetOutlineSetting Parms{};

	Parms.EnableOutline = EnableOutline;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemBase.BP_ItemBase_C.ExecuteUbergraph_BP_ItemBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemBase_C::ExecuteUbergraph_BP_ItemBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemBase_C", "ExecuteUbergraph_BP_ItemBase");

	Params::BP_ItemBase_C_ExecuteUbergraph_BP_ItemBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

