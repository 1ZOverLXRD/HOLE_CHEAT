#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseBP_PaperTower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "EN_PaperTowerMessage_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseBP_PaperTower.BaseBP_PaperTower_C
// 0x0038 (0x02E0 - 0x02A8)
class ABaseBP_PaperTower_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Speaker;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MainMesh;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        FlyHight;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         FlyingPaperAmount;                                 // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         FlyingPaperAmount_Temp;                            // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLast;                                            // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirst;                                           // 0x02D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSwitched;                                        // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DownVolumeFactor;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BulletHitEvent(const struct FVector& HitLocation, const struct FVector& HitDirection, double HitDamage, double HitStunPower, double DoT_Damage, double DoT_Stun, double DoT_Time, double DoT_Interval, bool IsPenetrated, class FName HitBoneName, const struct FVector& AttackLocation, class AActor* ShooterActor, EPhysicalSurface HitSurfaceType, bool IsMultipleShot, class FName ShotID, class FName AmmoRowName);
	void DoTEvent(double Damage, double Stun, class FName AttackerRowName, class FName AmmoRowName);
	void ExecuteUbergraph_BaseBP_PaperTower(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SendMessageToPaperTower(EN_PaperTowerMessage Message);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BaseBP_PaperTower_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseBP_PaperTower_C")
	}
	static class ABaseBP_PaperTower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseBP_PaperTower_C>();
	}
};
DUMPER7_ASSERTS_ABaseBP_PaperTower_C;

}

