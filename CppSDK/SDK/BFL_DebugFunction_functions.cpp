#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_DebugFunction

#include "Basic.hpp"

#include "BFL_DebugFunction_classes.hpp"
#include "BFL_DebugFunction_parameters.hpp"


namespace SDK
{

// Function BFL_DebugFunction.BFL_DebugFunction_C.GetAimAngleOutLogSetting
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   AimAngleOutLog                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_DebugFunction_C::GetAimAngleOutLogSetting(class UObject* __WorldContext, bool* AimAngleOutLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_DebugFunction_C", "GetAimAngleOutLogSetting");

	Params::BFL_DebugFunction_C_GetAimAngleOutLogSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AimAngleOutLog != nullptr)
		*AimAngleOutLog = Parms.AimAngleOutLog;
}


// Function BFL_DebugFunction.BFL_DebugFunction_C.GetFireTraceSetting
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   FireTrace                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   BulletSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_DebugFunction_C::GetFireTraceSetting(class UObject* __WorldContext, bool* FireTrace, bool* BulletSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_DebugFunction_C", "GetFireTraceSetting");

	Params::BFL_DebugFunction_C_GetFireTraceSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FireTrace != nullptr)
		*FireTrace = Parms.FireTrace;

	if (BulletSpeed != nullptr)
		*BulletSpeed = Parms.BulletSpeed;
}


// Function BFL_DebugFunction.BFL_DebugFunction_C.GetDebugLogSetting
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FStr_DebugLogSetting*            DebugLogSetting                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_DebugFunction_C::GetDebugLogSetting(class UObject* __WorldContext, struct FStr_DebugLogSetting* DebugLogSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_DebugFunction_C", "GetDebugLogSetting");

	Params::BFL_DebugFunction_C_GetDebugLogSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DebugLogSetting != nullptr)
		*DebugLogSetting = std::move(Parms.DebugLogSetting);
}


// Function BFL_DebugFunction.BFL_DebugFunction_C.SimpleDebugLog
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStr_DebugLogSetting&      DebugLogSetting                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EN_DebugTag                             DebugTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FName                       Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_DebugFunction_C::SimpleDebugLog(const struct FStr_DebugLogSetting& DebugLogSetting, const class FString& InString, EN_DebugTag DebugTag, float Duration, const class FName Key, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_DebugFunction_C", "SimpleDebugLog");

	Params::BFL_DebugFunction_C_SimpleDebugLog Parms{};

	Parms.DebugLogSetting = std::move(DebugLogSetting);
	Parms.InString = std::move(InString);
	Parms.DebugTag = DebugTag;
	Parms.Duration = Duration;
	Parms.Key = Key;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

