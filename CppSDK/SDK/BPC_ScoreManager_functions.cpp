#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_ScoreManager

#include "Basic.hpp"

#include "BPC_ScoreManager_classes.hpp"
#include "BPC_ScoreManager_parameters.hpp"


namespace SDK
{

// Function BPC_ScoreManager.BPC_ScoreManager_C.CountKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHeadShotKill                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   KillLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_ScoreManager_C::CountKill(class FName RowName, bool IsHeadShotKill, const struct FVector& KillLocation, int32 Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ScoreManager_C", "CountKill");

	Params::BPC_ScoreManager_C_CountKill Parms{};

	Parms.RowName = RowName;
	Parms.IsHeadShotKill = IsHeadShotKill;
	Parms.KillLocation = std::move(KillLocation);
	Parms.Hit = Hit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_ScoreManager.BPC_ScoreManager_C.GetKillLog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FStr_KillLog>*       KillLog_0                                              (Parm, OutParm)

void UBPC_ScoreManager_C::GetKillLog(TMap<int32, struct FStr_KillLog>* KillLog_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_ScoreManager_C", "GetKillLog");

	Params::BPC_ScoreManager_C_GetKillLog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KillLog_0 != nullptr)
		*KillLog_0 = std::move(Parms.KillLog_0);
}

}

