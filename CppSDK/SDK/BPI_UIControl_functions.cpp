#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_UIControl

#include "Basic.hpp"

#include "BPI_UIControl_classes.hpp"
#include "BPI_UIControl_parameters.hpp"


namespace SDK
{

// Function BPI_UIControl.BPI_UIControl_C.CloseWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_UIControl_C::CloseWidget(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_UIControl_C", "CloseWidget");

	Params::BPI_UIControl_C_CloseWidget Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPI_UIControl.BPI_UIControl_C.GetFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_WidgetFocusDirection                 MoveInDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget**                         FocusTargetWidget                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_UIControl_C::GetFocusWidget(EN_WidgetFocusDirection MoveInDirection, class UWidget** FocusTargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_UIControl_C", "GetFocusWidget");

	Params::BPI_UIControl_C_GetFocusWidget Parms{};

	Parms.MoveInDirection = MoveInDirection;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (FocusTargetWidget != nullptr)
		*FocusTargetWidget = Parms.FocusTargetWidget;
}


// Function BPI_UIControl.BPI_UIControl_C.InitializeFocus
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_UIControl_C::InitializeFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_UIControl_C", "InitializeFocus");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_UIControl.BPI_UIControl_C.IsOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_UIControl_C::IsOpened(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_UIControl_C", "IsOpened");

	Params::BPI_UIControl_C_IsOpened Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function BPI_UIControl.BPI_UIControl_C.SetPreWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          PreWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_UIControl_C::SetPreWidget(class UWidget* PreWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_UIControl_C", "SetPreWidget");

	Params::BPI_UIControl_C_SetPreWidget Parms{};

	Parms.PreWidget = PreWidget;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

