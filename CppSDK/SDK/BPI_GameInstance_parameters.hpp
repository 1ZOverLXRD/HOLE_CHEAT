#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GameInstance

#include "Basic.hpp"

#include "Str_SendPlayData_Result_structs.hpp"
#include "Str_FridgeData_structs.hpp"
#include "Str_HomeFacilityData_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "EN_Faction_structs.hpp"
#include "EN_GunPartsCategory_structs.hpp"
#include "Str_WeaponCustomSaveData_Temp_structs.hpp"
#include "Str_GunPartsData_structs.hpp"
#include "EN_WeaponPartsCategory_structs.hpp"
#include "Str_MeleePartsData_structs.hpp"
#include "Str_DebugLogSetting_structs.hpp"
#include "Str_WeaponCustomMetaData_structs.hpp"
#include "Str_ObjectData_structs.hpp"
#include "Str_DiscType_structs.hpp"
#include "Str_OnceItemData_structs.hpp"
#include "EN_FPSLimit_structs.hpp"
#include "Str_DataItemData_structs.hpp"
#include "Str_MeleeBaseSpecData_structs.hpp"
#include "Str_CashItemData_structs.hpp"
#include "Str_NPCData_structs.hpp"
#include "Str_ActionKeymap_structs.hpp"
#include "InputCore_structs.hpp"
#include "WeaponSelector_structs.hpp"
#include "Str_CurrentAmmo_structs.hpp"
#include "Str_TaskReward_structs.hpp"
#include "Str_TaskCardState_structs.hpp"
#include "Str_TaskItemData_structs.hpp"
#include "EN_Language_structs.hpp"
#include "Str_WeaponData_structs.hpp"
#include "Str_TaskData_structs.hpp"
#include "Str_AmmoData_structs.hpp"
#include "Str_DiscType_Amount_structs.hpp"
#include "Str_SkillData_structs.hpp"
#include "Str_WeaponNameAndSubCategory_structs.hpp"
#include "Str_GunSpecData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Str_AxisKeymap_structs.hpp"
#include "EN_WindowMode_structs.hpp"
#include "EN_DisplayResolution_structs.hpp"


namespace SDK::Params
{

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyConfigData_Audio
// 0x0004 (0x0004 - 0x0000)
struct BPI_GameInstance_C_ApplyConfigData_Audio final
{
public:
	uint8                                         Master;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         BGM;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SE;                                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         UI;                                                // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyConfigData_Audio;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyConfigData_Control
// 0x0038 (0x0038 - 0x0000)
struct BPI_GameInstance_C_ApplyConfigData_Control final
{
public:
	int32                                         Sensitivity;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sensitivity_ADS;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sensitivity_ADS_Scope2x;                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sensitivity_ADS_Scope4x;                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertVerticalLook;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleSprint;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleWalk;                                        // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleAim;                                         // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleCrouch;                                      // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleLean;                                        // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableWeaponScroll;                                // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertWeaponScroll;                                // 0x0017(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseSmoothing;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableControlAxisRotationInLean;                  // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GP_MovementDeadzone;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GP_LookDeadzone;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GP_ResponseCurve;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyConfigData_Control;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyConfigData_Game
// 0x0002 (0x0002 - 0x0000)
struct BPI_GameInstance_C_ApplyConfigData_Game final
{
public:
	EN_Language                                   Language;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SendPlayData;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyConfigData_Game;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyConfigData_Graphics
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_ApplyConfigData_Graphics final
{
public:
	EN_WindowMode                                 WindowMode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_DisplayResolution                          DisplayResolution;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Brightness;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FOV;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_FPSLimit                                   FPSLimit;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetroEffect;                                       // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraShake;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VSync;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DGI;                                               // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyConfigData_Graphics;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyConfigData_UI
// 0x0003 (0x0003 - 0x0000)
struct BPI_GameInstance_C_ApplyConfigData_UI final
{
public:
	bool                                          Crosshair;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TaskIcon;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         HUDMode;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyConfigData_UI;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyKeymapData_Gamepad
// 0x00A0 (0x00A0 - 0x0000)
struct BPI_GameInstance_C_ApplyKeymapData_Gamepad final
{
public:
	TMap<class FName, struct FStr_ActionKeymap>   ActionKeyMap_Gamepad;                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FName, struct FStr_AxisKeymap>     AxisKeyMap_Gamepad;                                // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyKeymapData_Gamepad;

// Function BPI_GameInstance.BPI_GameInstance_C.ApplyKeymapData_KBM
// 0x00A0 (0x00A0 - 0x0000)
struct BPI_GameInstance_C_ApplyKeymapData_KBM final
{
public:
	TMap<class FName, struct FStr_ActionKeymap>   ActionKeyMap;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FName, struct FStr_AxisKeymap>     AxisKeyMap;                                        // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_ApplyKeymapData_KBM;

// Function BPI_GameInstance.BPI_GameInstance_C.CheckGameSaveDataIsLoaded
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_CheckGameSaveDataIsLoaded final
{
public:
	bool                                          IsLoaded;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_CheckGameSaveDataIsLoaded;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAAOLForFunctionLibrary
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetAAOLForFunctionLibrary final
{
public:
	bool                                          AimAngleOutLog;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAAOLForFunctionLibrary;

// Function BPI_GameInstance.BPI_GameInstance_C.GetActionKeyDisplayName
// 0x0030 (0x0030 - 0x0000)
struct BPI_GameInstance_C_GetActionKeyDisplayName final
{
public:
	struct FStr_ActionKeymap                      Key;                                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   Name_0;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetActionKeyDisplayName;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAllEventProgress
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetAllEventProgress final
{
public:
	TMap<class FName, int32>                      EventProgress;                                     // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAllEventProgress;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAllOnceItemDropRateFromDB
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetAllOnceItemDropRateFromDB final
{
public:
	TMap<class FName, double>                     AllOnceItemData;                                   // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAllOnceItemDropRateFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAllSkillNameFromDB
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetAllSkillNameFromDB final
{
public:
	TArray<class FName>                           SkillRowName;                                      // 0x0000(0x0010)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAllSkillNameFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAllWeaponNameAndCategoryFromDB
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetAllWeaponNameAndCategoryFromDB final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FStr_WeaponNameAndSubCategory> AllData;                                 // 0x0008(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAllWeaponNameAndCategoryFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetAmmoSpecDataFromDB
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetAmmoSpecDataFromDB final
{
public:
	class FName                                   AmmoRowName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_AmmoData                          AmmoData;                                          // 0x0008(0x0040)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetAmmoSpecDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetArmorPointData
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_GetArmorPointData final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ArmorPoint;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetArmorPointData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetCashItemDataFromDB
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetCashItemDataFromDB final
{
public:
	class FName                                   CashItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_CashItemData                      CashItemData;                                      // 0x0010(0x0040)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetCashItemDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetColorTeamMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetColorTeamMode final
{
public:
	bool                                          IsColorTeamMode;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetColorTeamMode;

// Function BPI_GameInstance.BPI_GameInstance_C.GetConfigData_All
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_GetConfigData_All final
{
public:
	class USGO_ConfigData_C*                      ConfigData;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetConfigData_All;

// Function BPI_GameInstance.BPI_GameInstance_C.GetConfigData_Game
// 0x0002 (0x0002 - 0x0000)
struct BPI_GameInstance_C_GetConfigData_Game final
{
public:
	uint8                                         Language;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SendPlayData;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetConfigData_Game;

// Function BPI_GameInstance.BPI_GameInstance_C.GetConfigData_UI
// 0x0003 (0x0003 - 0x0000)
struct BPI_GameInstance_C_GetConfigData_UI final
{
public:
	bool                                          EnableCrosshair;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TaskIcon;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         HUDMode;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetConfigData_UI;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDataItemDataFromDB
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetDataItemDataFromDB final
{
public:
	class FName                                   DataItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_DataItemData                      DataItemData;                                      // 0x0010(0x0040)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDataItemDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDebugFocusRender
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetDebugFocusRender final
{
public:
	bool                                          IsDebug;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDebugFocusRender;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDefaultConfigData
// 0x0140 (0x0140 - 0x0000)
struct BPI_GameInstance_C_GetDefaultConfigData final
{
public:
	TMap<class FName, bool>                       DefaultBool;                                       // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, uint8>                      DefaultByte;                                       // 0x0050(0x0050)(Parm, OutParm)
	TMap<class FName, int32>                      DefaultInteger;                                    // 0x00A0(0x0050)(Parm, OutParm)
	TMap<class FName, double>                     DefaultFloat;                                      // 0x00F0(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDefaultConfigData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDefaultKeymapData
// 0x0140 (0x0140 - 0x0000)
struct BPI_GameInstance_C_GetDefaultKeymapData final
{
public:
	TMap<class FName, struct FStr_AxisKeymap>     DefaultAxis_KBM;                                   // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, struct FStr_ActionKeymap>   DefaultAction_KBM;                                 // 0x0050(0x0050)(Parm, OutParm)
	TMap<class FName, struct FStr_AxisKeymap>     DefaultAxis_GP;                                    // 0x00A0(0x0050)(Parm, OutParm)
	TMap<class FName, struct FStr_ActionKeymap>   DefaultAction_GP;                                  // 0x00F0(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDefaultKeymapData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDiscDataFromDB
// 0x0048 (0x0048 - 0x0000)
struct BPI_GameInstance_C_GetDiscDataFromDB final
{
public:
	class FName                                   DiscRowName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_DiscType                          DiscData;                                          // 0x0010(0x0038)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDiscDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetDLSForFunctionLibrary
// 0x0006 (0x0006 - 0x0000)
struct BPI_GameInstance_C_GetDLSForFunctionLibrary final
{
public:
	struct FStr_DebugLogSetting                   DebugLogSetting;                                   // 0x0000(0x0006)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetDLSForFunctionLibrary;

// Function BPI_GameInstance.BPI_GameInstance_C.GetEventProgress
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetEventProgress final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Progress;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetEventProgress;

// Function BPI_GameInstance.BPI_GameInstance_C.GetFactionalRelationShip
// 0x0003 (0x0003 - 0x0000)
struct BPI_GameInstance_C_GetFactionalRelationShip final
{
public:
	EN_Faction                                    SelfFaction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_Faction                                    OtherFaction;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFrendry;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetFactionalRelationShip;

// Function BPI_GameInstance.BPI_GameInstance_C.GetFridgeDataFromDB
// 0x0070 (0x0070 - 0x0000)
struct BPI_GameInstance_C_GetFridgeDataFromDB final
{
public:
	class FName                                   FridgeRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_FridgeData                        FridgeData;                                        // 0x0008(0x0060)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetFridgeDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetFTSForFunctionLibrary
// 0x0002 (0x0002 - 0x0000)
struct BPI_GameInstance_C_GetFTSForFunctionLibrary final
{
public:
	bool                                          FireTrace;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BulletSpeed;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetFTSForFunctionLibrary;

// Function BPI_GameInstance.BPI_GameInstance_C.GetGunBaseSpecFromDB
// 0x0078 (0x0078 - 0x0000)
struct BPI_GameInstance_C_GetGunBaseSpecFromDB final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_GunSpecData                       GunBaseSpec;                                       // 0x0008(0x0068)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetGunBaseSpecFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetGunPartsDataByCategoryFromDB
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_GetGunPartsDataByCategoryFromDB final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_GunPartsCategory                           PartsCategory;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           GunPartsRowNames;                                  // 0x0010(0x0010)(Parm, OutParm)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetGunPartsDataByCategoryFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetGunPartsDataFromDB
// 0x0150 (0x0150 - 0x0000)
struct BPI_GameInstance_C_GetGunPartsDataFromDB final
{
public:
	class FName                                   GunPartsRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_GunPartsData                      GunPartsData;                                      // 0x0008(0x0140)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0148(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetGunPartsDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetHitDamageMultiplierData
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetHitDamageMultiplierData final
{
public:
	EPhysicalSurface                              HitSurfaceType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArmorPenetrated;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageMultiplier;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetHitDamageMultiplierData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetHitStunDamageMultiplierData
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetHitStunDamageMultiplierData final
{
public:
	EPhysicalSurface                              HitSurface;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Multiplier;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetHitStunDamageMultiplierData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetHomeFacilityDataFromDB
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_GetHomeFacilityDataFromDB final
{
public:
	class FName                                   FacilityRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_HomeFacilityData                  FacilityData;                                      // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetHomeFacilityDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetInputKeyByActionName
// 0x0038 (0x0038 - 0x0000)
struct BPI_GameInstance_C_GetInputKeyByActionName final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ActionKeymap                      Key;                                               // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetInputKeyByActionName;

// Function BPI_GameInstance.BPI_GameInstance_C.GetInputKeyIconMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetInputKeyIconMode final
{
public:
	bool                                          IsGamepadMode;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetInputKeyIconMode;

// Function BPI_GameInstance.BPI_GameInstance_C.GetIsReturnToTitle
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetIsReturnToTitle final
{
public:
	bool                                          IsReturnToTitle;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetIsReturnToTitle;

// Function BPI_GameInstance.BPI_GameInstance_C.GetKeyIconFromDB
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_GetKeyIconFromDB final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UTexture*                               Icon;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetKeyIconFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetKeymapData_All
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_GetKeymapData_All final
{
public:
	class USGO_KeymapData_C*                      KeymapData;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetKeymapData_All;

// Function BPI_GameInstance.BPI_GameInstance_C.GetLevelDataImageFromDB
// 0x0018 (0x0018 - 0x0000)
struct BPI_GameInstance_C_GetLevelDataImageFromDB final
{
public:
	class FName                                   AreaRowName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Image;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetLevelDataImageFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetLevelNameFromDB
// 0x0020 (0x0020 - 0x0000)
struct BPI_GameInstance_C_GetLevelNameFromDB final
{
public:
	class FName                                   AreaRowName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetLevelNameFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetLockedWeaponPartsOnlyUnlockedWeapon
// 0x0018 (0x0018 - 0x0000)
struct BPI_GameInstance_C_GetLockedWeaponPartsOnlyUnlockedWeapon final
{
public:
	TArray<class FName>                           WeaponPartsRowNames;                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetLockedWeaponPartsOnlyUnlockedWeapon;

// Function BPI_GameInstance.BPI_GameInstance_C.GetMeleeBaseSpecFromDB
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_GetMeleeBaseSpecFromDB final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_MeleeBaseSpecData                 BaseSpec;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetMeleeBaseSpecFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetMeleePartsDataFromDB
// 0x0048 (0x0048 - 0x0000)
struct BPI_GameInstance_C_GetMeleePartsDataFromDB final
{
public:
	class FName                                   MeleePartsRowName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_MeleePartsData                    MeleePartsData;                                    // 0x0008(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetMeleePartsDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetNewTaskFromDB
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetNewTaskFromDB final
{
public:
	class FName                                   NewTaskRowName;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRepeatTask;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetNewTaskFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetNPCAutoMantle
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetNPCAutoMantle final
{
public:
	bool                                          IsAutoMantle;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetNPCAutoMantle;

// Function BPI_GameInstance.BPI_GameInstance_C.GetNPCDataFromDB
// 0x0118 (0x0118 - 0x0000)
struct BPI_GameInstance_C_GetNPCDataFromDB final
{
public:
	class FName                                   NPCRowName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_NPCData                           NPC_Data;                                          // 0x0010(0x0108)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetNPCDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetNPCTaskViewMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetNPCTaskViewMode final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetNPCTaskViewMode;

// Function BPI_GameInstance.BPI_GameInstance_C.GetObjectDataFromDB
// 0x0078 (0x0078 - 0x0000)
struct BPI_GameInstance_C_GetObjectDataFromDB final
{
public:
	class FName                                   ObjectRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ObjectData                        ObjectData;                                        // 0x0008(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetObjectDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetOnceItemDataFromDB
// 0x00A0 (0x00A0 - 0x0000)
struct BPI_GameInstance_C_GetOnceItemDataFromDB final
{
public:
	class FName                                   OnceItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_OnceItemData                      OnceItemData;                                      // 0x0010(0x0090)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetOnceItemDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetPrototypeConfigData
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetPrototypeConfigData final
{
public:
	bool                                          CameraShake;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetPrototypeConfigData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetRaytraceGropIDsFromGameInstance
// 0x0004 (0x0004 - 0x0000)
struct BPI_GameInstance_C_GetRaytraceGropIDsFromGameInstance final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetRaytraceGropIDsFromGameInstance;

// Function BPI_GameInstance.BPI_GameInstance_C.GetReward
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetReward final
{
public:
	struct FStr_TaskReward                        Reward;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetReward;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_AreaUnlockData
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_AreaUnlockData final
{
public:
	TSet<class FName>                             AreaUnlocked;                                      // 0x0000(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_AreaUnlockData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_ClearTaskCount
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_ClearTaskCount final
{
public:
	class FName                                   TaskID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_ClearTaskCount;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_CurrentAmmo
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_CurrentAmmo final
{
public:
	TMap<EWeaponSelector, struct FStr_CurrentAmmo> CurrentAmmo;                                      // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_CurrentAmmo;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_CurrentTask
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_CurrentTask final
{
public:
	TMap<uint8, struct FStr_TaskCardState>        Task;                                              // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_CurrentTask;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_CurrentTaskItems
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_CurrentTaskItems final
{
public:
	class FName                                   TaskItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_CurrentTaskItems;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_CurrentWeapon
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_CurrentWeapon final
{
public:
	EWeaponSelector                               CurrentWeaponSelector;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_CurrentWeapon;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_EquipWeaponData
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_EquipWeaponData final
{
public:
	TMap<EWeaponSelector, class FName>            WeaponData;                                        // 0x0000(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_EquipWeaponData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_IsClearedAllTask
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_IsClearedAllTask final
{
public:
	bool                                          IsAllClear;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_IsClearedAllTask;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_IsUnlockedShopItem
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_IsUnlockedShopItem final
{
public:
	class FName                                   SkillRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_IsUnlockedShopItem;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_IsUnlockedWeaponPartsBlueprint
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_IsUnlockedWeaponPartsBlueprint final
{
public:
	class FName                                   WeaponPartsRowName;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_IsUnlockedWeaponPartsBlueprint;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_PlayerStats
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_PlayerStats final
{
public:
	int32                                         Cash;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Data;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      Disc;                                              // 0x0008(0x0050)(Parm, OutParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_PlayerStats;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_PurchasedWeaponParts
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_PurchasedWeaponParts final
{
public:
	TSet<class FName>                             WeaponPartsRowName;                                // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_PurchasedWeaponParts;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_RoomKeyUnlockData
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_RoomKeyUnlockData final
{
public:
	class FName                                   KeyName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_RoomKeyUnlockData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_SkillLevel_Activated
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_SkillLevel_Activated final
{
public:
	class FName                                   SkillRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillLv;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_SkillLevel_Activated;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_SkillLevel_Unlocked
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_SkillLevel_Unlocked final
{
public:
	class FName                                   SkillRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillLv;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_SkillLevel_Unlocked;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_SkillLevel_UnlockedAll
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_SkillLevel_UnlockedAll final
{
public:
	TMap<class FName, int32>                      Skill;                                             // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_SkillLevel_UnlockedAll;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_UnlockGunIDList
// 0x0018 (0x0018 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_UnlockGunIDList final
{
public:
	TArray<class FName>                           GunRowName;                                        // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_UnlockGunIDList;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_UnlockGunIDList_Length
// 0x0004 (0x0004 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_UnlockGunIDList_Length final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_UnlockGunIDList_Length;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_UnlockWeapon
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_GetSaveData_UnlockWeapon final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlock;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_UnlockWeapon;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_WeaponCustomMetaData
// 0x0028 (0x0028 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_WeaponCustomMetaData final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCustomMetaData              WeaponCustomMetaData;                              // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_WeaponCustomMetaData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSaveData_WeaponCustomSaveData
// 0x0020 (0x0020 - 0x0000)
struct BPI_GameInstance_C_GetSaveData_WeaponCustomSaveData final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCustomSaveData_Temp         WeaponCustomSaveData;                              // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSaveData_WeaponCustomSaveData;

// Function BPI_GameInstance.BPI_GameInstance_C.GetSkillDataFromDB
// 0x00D0 (0x00D0 - 0x0000)
struct BPI_GameInstance_C_GetSkillDataFromDB final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_SkillData                         SkillData;                                         // 0x0010(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetSkillDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetTaskDataFromDB
// 0x00C8 (0x00C8 - 0x0000)
struct BPI_GameInstance_C_GetTaskDataFromDB final
{
public:
	class FName                                   TaskRowName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_TaskData                          TaskData;                                          // 0x0008(0x00B8)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetTaskDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetTaskItemDataFromDB
// 0x0130 (0x0130 - 0x0000)
struct BPI_GameInstance_C_GetTaskItemDataFromDB final
{
public:
	class FName                                   TaskItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_TaskItemData                      TaskItemData;                                      // 0x0008(0x0120)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0128(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetTaskItemDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetUIColor
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_GetUIColor final
{
public:
	struct FLinearColor                           PrimaryColor;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SecondaryColor;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextActiveColor;                                   // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextDeactiveColor;                                 // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RejectColor;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetUIColor;

// Function BPI_GameInstance.BPI_GameInstance_C.GetWeaponDataFromDB
// 0x0098 (0x0098 - 0x0000)
struct BPI_GameInstance_C_GetWeaponDataFromDB final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponData                        WeaponData;                                        // 0x0010(0x0088)(Parm, OutParm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetWeaponDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.GetWeaponPartsDataFromDB
// 0x0190 (0x0190 - 0x0000)
struct BPI_GameInstance_C_GetWeaponPartsDataFromDB final
{
public:
	class FName                                   WeaponPartsRowName;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WeaponPartsCategory                        WeaponPartsCategory;                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_GunPartsData                      GunPartsData;                                      // 0x0010(0x0140)(Parm, OutParm, HasGetValueTypeHash)
	struct FStr_MeleePartsData                    MeleePartsData;                                    // 0x0150(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0188(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_GetWeaponPartsDataFromDB;

// Function BPI_GameInstance.BPI_GameInstance_C.HandOverTaskItem
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_HandOverTaskItem final
{
public:
	TMap<class FName, int32>                      RequireItem;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_HandOverTaskItem;

// Function BPI_GameInstance.BPI_GameInstance_C.SaveSaveData_All
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_SaveSaveData_All final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SaveSaveData_All;

// Function BPI_GameInstance.BPI_GameInstance_C.SendPlayData_Result
// 0x0080 (0x0080 - 0x0000)
struct BPI_GameInstance_C_SendPlayData_Result final
{
public:
	struct FStr_SendPlayData_Result               ResultData;                                        // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SendPlayData_Result;

// Function BPI_GameInstance.BPI_GameInstance_C.SetColorTeamMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_SetColorTeamMode final
{
public:
	bool                                          IsColorTeamMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetColorTeamMode;

// Function BPI_GameInstance.BPI_GameInstance_C.SetEventProgress
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_SetEventProgress final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Progress;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetEventProgress;

// Function BPI_GameInstance.BPI_GameInstance_C.SetInputKeyIconMode
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_SetInputKeyIconMode final
{
public:
	bool                                          IsGamapadMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetInputKeyIconMode;

// Function BPI_GameInstance.BPI_GameInstance_C.SetIsReturnToTitle
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_SetIsReturnToTitle final
{
public:
	bool                                          IsReturnToTitle;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetIsReturnToTitle;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_AddClearTaskCounts
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_AddClearTaskCounts final
{
public:
	class FName                                   Task;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_AddClearTaskCounts;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_AddPurchasedWeaponParts
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_AddPurchasedWeaponParts final
{
public:
	TArray<class FName>                           WeaponPartsRowName;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_AddPurchasedWeaponParts;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_CurrentAmmo
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_CurrentAmmo final
{
public:
	TMap<EWeaponSelector, struct FStr_CurrentAmmo> CurrentAmmo;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_CurrentAmmo;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_CurrentTask
// 0x0050 (0x0050 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_CurrentTask final
{
public:
	TMap<uint8, struct FStr_TaskCardState>        CurrentTask;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_CurrentTask;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_CurrentTaskItems
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_SetSaveData_CurrentTaskItems final
{
public:
	class FName                                   TaskItemRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_CurrentTaskItems;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_PlayerStats
// 0x0058 (0x0058 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_PlayerStats final
{
public:
	int32                                         Cash;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Data;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      Disc;                                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_PlayerStats;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_SkillLevel_Activated
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_SetSaveData_SkillLevel_Activated final
{
public:
	class FName                                   SkillRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillLv;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_SkillLevel_Activated;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_SkillLevel_Unlocked
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_SetSaveData_SkillLevel_Unlocked final
{
public:
	class FName                                   SkillRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillLv;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_SkillLevel_Unlocked;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_UnlockedWeaponPartsBlueprint
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_UnlockedWeaponPartsBlueprint final
{
public:
	class FName                                   PartsRowName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_UnlockedWeaponPartsBlueprint;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_UnlockWeapon
// 0x000C (0x000C - 0x0000)
struct BPI_GameInstance_C_SetSaveData_UnlockWeapon final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlock;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_UnlockWeapon;

// Function BPI_GameInstance.BPI_GameInstance_C.SetSaveData_WeaponCustomSaveData
// 0x0020 (0x0020 - 0x0000)
struct BPI_GameInstance_C_SetSaveData_WeaponCustomSaveData final
{
public:
	class FName                                   WeaponRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCustomSaveData_Temp         WeaponCustomSaveData;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetSaveData_WeaponCustomSaveData;

// Function BPI_GameInstance.BPI_GameInstance_C.SetShopMachine
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_SetShopMachine final
{
public:
	class AActor*                                 Machine;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_SetShopMachine;

// Function BPI_GameInstance.BPI_GameInstance_C.TempApply_Graphics_Brightness
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_TempApply_Graphics_Brightness final
{
public:
	double                                        Brightness;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_TempApply_Graphics_Brightness;

// Function BPI_GameInstance.BPI_GameInstance_C.TempApply_Graphics_FOV
// 0x0004 (0x0004 - 0x0000)
struct BPI_GameInstance_C_TempApply_Graphics_FOV final
{
public:
	int32                                         FieldOfView;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_TempApply_Graphics_FOV;

// Function BPI_GameInstance.BPI_GameInstance_C.TempApply_Graphics_RetroEffect
// 0x0001 (0x0001 - 0x0000)
struct BPI_GameInstance_C_TempApply_Graphics_RetroEffect final
{
public:
	bool                                          RetroEffect;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_TempApply_Graphics_RetroEffect;

// Function BPI_GameInstance.BPI_GameInstance_C.UseCash
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_UseCash final
{
public:
	int32                                         Cash;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_UseCash;

// Function BPI_GameInstance.BPI_GameInstance_C.UseData
// 0x0008 (0x0008 - 0x0000)
struct BPI_GameInstance_C_UseData final
{
public:
	int32                                         Data;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_UseData;

// Function BPI_GameInstance.BPI_GameInstance_C.UseDisc
// 0x0010 (0x0010 - 0x0000)
struct BPI_GameInstance_C_UseDisc final
{
public:
	struct FStr_DiscType_Amount                   Disc;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_GameInstance_C_UseDisc;

}

