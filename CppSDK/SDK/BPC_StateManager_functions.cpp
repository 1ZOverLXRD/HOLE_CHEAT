#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_StateManager

#include "Basic.hpp"

#include "BPC_StateManager_classes.hpp"
#include "BPC_StateManager_parameters.hpp"


namespace SDK
{

// Function BPC_StateManager.BPC_StateManager_C.DamageByDoT
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stun                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttackerRowName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::DamageByDoT(double Damage, double Stun, class FName AttackerRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "DamageByDoT");

	Params::BPC_StateManager_C_DamageByDoT Parms{};

	Parms.Damage = Damage;
	Parms.Stun = Stun;
	Parms.AttackerRowName = AttackerRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.UpdateDoT
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::UpdateDoT(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "UpdateDoT");

	Params::BPC_StateManager_C_UpdateDoT Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.AddDoT
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DoT_Damage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Stun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Time                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Interval                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttackerRowName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::AddDoT(double DoT_Damage, double DoT_Stun, double DoT_Time, double DoT_Interval, class FName AttackerRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "AddDoT");

	Params::BPC_StateManager_C_AddDoT Parms{};

	Parms.DoT_Damage = DoT_Damage;
	Parms.DoT_Stun = DoT_Stun;
	Parms.DoT_Time = DoT_Time;
	Parms.DoT_Interval = DoT_Interval;
	Parms.AttackerRowName = AttackerRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.GetIsIndoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsIndoor_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::GetIsIndoor(bool* IsIndoor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "GetIsIndoor");

	Params::BPC_StateManager_C_GetIsIndoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsIndoor_0 != nullptr)
		*IsIndoor_0 = Parms.IsIndoor_0;
}


// Function BPC_StateManager.BPC_StateManager_C.SetIsIndoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsIndoor_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::SetIsIndoor(bool IsIndoor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "SetIsIndoor");

	Params::BPC_StateManager_C_SetIsIndoor Parms{};

	Parms.IsIndoor_0 = IsIndoor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.HealHP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Heal_Amount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::HealHP(double Heal_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "HealHP");

	Params::BPC_StateManager_C_HealHP Parms{};

	Parms.Heal_Amount = Heal_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.HitCount
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::HitCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "HitCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.GetHitCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Hit_0                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::GetHitCount(int32* Hit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "GetHitCount");

	Params::BPC_StateManager_C_GetHitCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_0 != nullptr)
		*Hit_0 = Parms.Hit_0;
}


// Function BPC_StateManager.BPC_StateManager_C.RegenerateHP_Stop
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::RegenerateHP_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "RegenerateHP_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.RegenerateHP_Core
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::RegenerateHP_Core()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "RegenerateHP_Core");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.RegenerateHP_Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::RegenerateHP_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "RegenerateHP_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.UpdateMoveSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MoveSpeedMultiplier                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::UpdateMoveSpeed(double MoveSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "UpdateMoveSpeed");

	Params::BPC_StateManager_C_UpdateMoveSpeed Parms{};

	Parms.MoveSpeedMultiplier = MoveSpeedMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.DeadCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDead_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::DeadCheck(bool* IsDead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "DeadCheck");

	Params::BPC_StateManager_C_DeadCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDead_0 != nullptr)
		*IsDead_0 = Parms.IsDead_0;
}


// Function BPC_StateManager.BPC_StateManager_C.StopStaminaRegeneration
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::StopStaminaRegeneration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "StopStaminaRegeneration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.RegenerateStamina
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_StateManager_C::RegenerateStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "RegenerateStamina");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_StateManager.BPC_StateManager_C.StaminaDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StunPower                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::StaminaDamage(double StunPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "StaminaDamage");

	Params::BPC_StateManager_C_StaminaDamage Parms{};

	Parms.StunPower = StunPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.Damage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsDead_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::Damage(double Damage_0, bool* IsDead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "Damage");

	Params::BPC_StateManager_C_Damage Parms{};

	Parms.Damage_0 = Damage_0;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDead_0 != nullptr)
		*IsDead_0 = Parms.IsDead_0;
}


// Function BPC_StateManager.BPC_StateManager_C.InitializeStateManager
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_Faction                              Faction_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHP_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxStamina_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::InitializeStateManager(EN_Faction Faction_0, double MaxHP_0, double MaxStamina_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "InitializeStateManager");

	Params::BPC_StateManager_C_InitializeStateManager Parms{};

	Parms.Faction_0 = Faction_0;
	Parms.MaxHP_0 = MaxHP_0;
	Parms.MaxStamina_0 = MaxStamina_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "ReceiveTick");

	Params::BPC_StateManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_StateManager.BPC_StateManager_C.ExecuteUbergraph_BPC_StateManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_StateManager_C::ExecuteUbergraph_BPC_StateManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_StateManager_C", "ExecuteUbergraph_BPC_StateManager");

	Params::BPC_StateManager_C_ExecuteUbergraph_BPC_StateManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

