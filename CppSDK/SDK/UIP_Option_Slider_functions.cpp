#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIP_Option_Slider

#include "Basic.hpp"

#include "UIP_Option_Slider_classes.hpp"
#include "UIP_Option_Slider_parameters.hpp"


namespace SDK
{

// Function UIP_Option_Slider.UIP_Option_Slider_C.BndEvt__UIP_Option_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::BndEvt__UIP_Option_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "BndEvt__UIP_Option_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::UIP_Option_Slider_C_BndEvt__UIP_Option_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.CloseWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::CloseWidget(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "CloseWidget");

	Params::UIP_Option_Slider_C_CloseWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.ExecuteUbergraph_UIP_Option_Slider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::ExecuteUbergraph_UIP_Option_Slider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "ExecuteUbergraph_UIP_Option_Slider");

	Params::UIP_Option_Slider_C_ExecuteUbergraph_UIP_Option_Slider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.Get_ValueText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUIP_Option_Slider_C::Get_ValueText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "Get_ValueText");

	Params::UIP_Option_Slider_C_Get_ValueText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.GetFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_WidgetFocusDirection                 MoveInDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget**                         FocusTargetWidget                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::GetFocusWidget(EN_WidgetFocusDirection MoveInDirection, class UWidget** FocusTargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "GetFocusWidget");

	Params::UIP_Option_Slider_C_GetFocusWidget Parms{};

	Parms.MoveInDirection = MoveInDirection;

	UObject::ProcessEvent(Func, &Parms);

	if (FocusTargetWidget != nullptr)
		*FocusTargetWidget = Parms.FocusTargetWidget;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.GetSelectedValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  IntegerValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FloatValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::GetSelectedValue(int32* IntegerValue, double* FloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "GetSelectedValue");

	Params::UIP_Option_Slider_C_GetSelectedValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IntegerValue != nullptr)
		*IntegerValue = Parms.IntegerValue;

	if (FloatValue != nullptr)
		*FloatValue = Parms.FloatValue;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.InitializeFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UUIP_Option_Slider_C::InitializeFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "InitializeFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.InitializeSlider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIP_Option_Slider_C::InitializeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "InitializeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.IsOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::IsOpened(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "IsOpened");

	Params::UIP_Option_Slider_C_IsOpened Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "PreConstruct");

	Params::UIP_Option_Slider_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.SetPreWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          PreWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::SetPreWidget(class UWidget* PreWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "SetPreWidget");

	Params::UIP_Option_Slider_C_SetPreWidget Parms{};

	Parms.PreWidget = PreWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.SetSelectedValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::SetSelectedValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "SetSelectedValue");

	Params::UIP_Option_Slider_C_SetSelectedValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.SliderControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UUIP_Option_Slider_C::SliderControl(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "SliderControl");

	Params::UIP_Option_Slider_C_SliderControl Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIP_Option_Slider.UIP_Option_Slider_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIP_Option_Slider_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIP_Option_Slider_C", "Tick");

	Params::UIP_Option_Slider_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

