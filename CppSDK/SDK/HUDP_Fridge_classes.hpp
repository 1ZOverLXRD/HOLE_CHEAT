#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDP_Fridge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUDP_Fridge.HUDP_Fridge_C
// 0x0028 (0x02F8 - 0x02D0)
class UHUDP_Fridge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Icon_Circle;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Circle_Back;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WaveCount;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_HUDP_Fridge(int32 EntryPoint);
	void SetProgress(double Progress, int32 Wave);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("HUDP_Fridge_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUDP_Fridge_C")
	}
	static class UHUDP_Fridge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDP_Fridge_C>();
	}
};
DUMPER7_ASSERTS_UHUDP_Fridge_C;

}

