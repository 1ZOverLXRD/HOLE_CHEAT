#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LCBP_DeadReviewRoom

#include "Basic.hpp"

#include "LCBP_DeadReviewRoom_classes.hpp"
#include "LCBP_DeadReviewRoom_parameters.hpp"


namespace SDK
{

// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.DrawLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_DeadReviewRoom_C::DrawLine(const struct FVector& StartLocation, const struct FVector& EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "DrawLine");

	Params::LCBP_DeadReviewRoom_C_DrawLine Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.SetBodyData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeltalMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Key_ShotID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_DeadReviewRoom_C::SetBodyData(class USkeletalMeshComponent* SkeltalMesh, class FName Key_ShotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "SetBodyData");

	Params::LCBP_DeadReviewRoom_C_SetBodyData Parms{};

	Parms.SkeltalMesh = SkeltalMesh;
	Parms.Key_ShotID = Key_ShotID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.SetCameraLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   AddLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_DeadReviewRoom_C::SetCameraLocation(const struct FVector& AddLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "SetCameraLocation");

	Params::LCBP_DeadReviewRoom_C_SetCameraLocation Parms{};

	Parms.AddLocation = std::move(AddLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.SetCameraRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  AddRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALCBP_DeadReviewRoom_C::SetCameraRotation(const struct FRotator& AddRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "SetCameraRotation");

	Params::LCBP_DeadReviewRoom_C_SetCameraRotation Parms{};

	Parms.AddRotation = std::move(AddRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.SetShotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_ShotData>&           ShotData_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ALCBP_DeadReviewRoom_C::SetShotData(TArray<struct FStr_ShotData>& ShotData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "SetShotData");

	Params::LCBP_DeadReviewRoom_C_SetShotData Parms{};

	Parms.ShotData_0 = std::move(ShotData_0);

	UObject::ProcessEvent(Func, &Parms);

	ShotData_0 = std::move(Parms.ShotData_0);
}


// Function LCBP_DeadReviewRoom.LCBP_DeadReviewRoom_C.ShowShotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName*                            AmmoRowName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 ShotDistance                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            KillerRowName                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsHeadShot                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_DeadReviewRoom_C::ShowShotData(class FName* AmmoRowName, double* ShotDistance, class FName* KillerRowName, bool* IsHeadShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_DeadReviewRoom_C", "ShowShotData");

	Params::LCBP_DeadReviewRoom_C_ShowShotData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AmmoRowName != nullptr)
		*AmmoRowName = Parms.AmmoRowName;

	if (ShotDistance != nullptr)
		*ShotDistance = Parms.ShotDistance;

	if (KillerRowName != nullptr)
		*KillerRowName = Parms.KillerRowName;

	if (IsHeadShot != nullptr)
		*IsHeadShot = Parms.IsHeadShot;
}

}

