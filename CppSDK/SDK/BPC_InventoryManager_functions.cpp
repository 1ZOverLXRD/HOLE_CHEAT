#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_InventoryManager

#include "Basic.hpp"

#include "BPC_InventoryManager_classes.hpp"
#include "BPC_InventoryManager_parameters.hpp"


namespace SDK
{

// Function BPC_InventoryManager.BPC_InventoryManager_C.ClearItems
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_InventoryManager_C::ClearItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "ClearItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.FindItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Find                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_InventoryManager_C::FindItem(class FName RowName, bool* Find, int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "FindItem");

	Params::BPC_InventoryManager_C_FindItem Parms{};

	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);

	if (Find != nullptr)
		*Find = Parms.Find;

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.GetDisc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, int32>*               Disc_0                                                 (Parm, OutParm)

void UBPC_InventoryManager_C::GetDisc(TMap<class FName, int32>* Disc_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "GetDisc");

	Params::BPC_InventoryManager_C_GetDisc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Disc_0 != nullptr)
		*Disc_0 = std::move(Parms.Disc_0);
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.GetItemAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, int32>*               Items_0                                                (Parm, OutParm)

void UBPC_InventoryManager_C::GetItemAll(TMap<class FName, int32>* Items_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "GetItemAll");

	Params::BPC_InventoryManager_C_GetItemAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Items_0 != nullptr)
		*Items_0 = std::move(Parms.Items_0);
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.GetItemByRowName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GetAll                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  GetAmount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_InventoryManager_C::GetItemByRowName(class FName RowName, bool GetAll, int32 Amount, bool* Success, int32* GetAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "GetItemByRowName");

	Params::BPC_InventoryManager_C_GetItemByRowName Parms{};

	Parms.RowName = RowName;
	Parms.GetAll = GetAll;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (GetAmount != nullptr)
		*GetAmount = Parms.GetAmount;
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.SetDisc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DiscRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_InventoryManager_C::SetDisc(class FName DiscRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "SetDisc");

	Params::BPC_InventoryManager_C_SetDisc Parms{};

	Parms.DiscRowName = DiscRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.SetItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_InventoryManager_C::SetItem(class FName ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "SetItem");

	Params::BPC_InventoryManager_C_SetItem Parms{};

	Parms.ItemRowName = ItemRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_InventoryManager.BPC_InventoryManager_C.ZeroItemRemove
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_InventoryManager_C::ZeroItemRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_InventoryManager_C", "ZeroItemRemove");

	UObject::ProcessEvent(Func, nullptr);
}

}

