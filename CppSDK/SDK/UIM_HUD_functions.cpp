#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIM_HUD

#include "Basic.hpp"

#include "UIM_HUD_classes.hpp"
#include "UIM_HUD_parameters.hpp"


namespace SDK
{

// Function UIM_HUD.UIM_HUD_C.Animation_0
// (BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::Animation_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "Animation_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIM_HUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.ControlCrosshair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCrosshair_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::ControlCrosshair(bool EnableCrosshair_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ControlCrosshair");

	Params::UIM_HUD_C_ControlCrosshair Parms{};

	Parms.EnableCrosshair_0 = EnableCrosshair_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.ControlOBJMovie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RenderOpacity_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMediaSource*                     MediaSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::ControlOBJMovie(double RenderOpacity_0, class UMediaSource* MediaSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ControlOBJMovie");

	Params::UIM_HUD_C_ControlOBJMovie Parms{};

	Parms.RenderOpacity_0 = RenderOpacity_0;
	Parms.MediaSource = MediaSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.DelayAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_TaskUI                               DelayAnim_Task                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DelayAnim_IsOpen_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DelayTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::DelayAnimation(EN_TaskUI DelayAnim_Task, bool DelayAnim_IsOpen_0, double DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "DelayAnimation");

	Params::UIM_HUD_C_DelayAnimation Parms{};

	Parms.DelayAnim_Task = DelayAnim_Task;
	Parms.DelayAnim_IsOpen_0 = DelayAnim_IsOpen_0;
	Parms.DelayTime = DelayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.ExecuteUbergraph_UIM_HUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::ExecuteUbergraph_UIM_HUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ExecuteUbergraph_UIM_HUD");

	Params::UIM_HUD_C_ExecuteUbergraph_UIM_HUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.GetInteractUI_SelectNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  SelectNum                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::GetInteractUI_SelectNum(int32* SelectNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "GetInteractUI_SelectNum");

	Params::UIM_HUD_C_GetInteractUI_SelectNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectNum != nullptr)
		*SelectNum = Parms.SelectNum;
}


// Function UIM_HUD.UIM_HUD_C.GetInteractUI_TextLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::GetInteractUI_TextLength(int32* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "GetInteractUI_TextLength");

	Params::UIM_HUD_C_GetInteractUI_TextLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function UIM_HUD.UIM_HUD_C.GetInteractUI_Visible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsVisible_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::GetInteractUI_Visible(bool* IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "GetInteractUI_Visible");

	Params::UIM_HUD_C_GetInteractUI_Visible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible_0 != nullptr)
		*IsVisible_0 = Parms.IsVisible_0;
}


// Function UIM_HUD.UIM_HUD_C.HideCashData
// (Public, BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::HideCashData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "HideCashData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.HideFridgeProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::HideFridgeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "HideFridgeProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.HideInteractUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::HideInteractUI(bool IsAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "HideInteractUI");

	Params::UIM_HUD_C_HideInteractUI Parms{};

	Parms.IsAnimation = IsAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.ImportConfigData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCrosshair_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_TaskUIViewMode                       TaskIcon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_HUDMode                              HUDMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::ImportConfigData(bool EnableCrosshair_0, EN_TaskUIViewMode TaskIcon, EN_HUDMode HUDMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ImportConfigData");

	Params::UIM_HUD_C_ImportConfigData Parms{};

	Parms.EnableCrosshair_0 = EnableCrosshair_0;
	Parms.TaskIcon = TaskIcon;
	Parms.HUDMode = HUDMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUIM_HUD_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::UIM_HUD_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.MoveSelectorInteractUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::MoveSelectorInteractUI(bool IsUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "MoveSelectorInteractUI");

	Params::UIM_HUD_C_MoveSelectorInteractUI Parms{};

	Parms.IsUp = IsUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.NavUI_Control
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_TaskUI                               Task                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayerInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::NavUI_Control(bool IsOpen, EN_TaskUI Task, bool IsPlayerInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "NavUI_Control");

	Params::UIM_HUD_C_NavUI_Control Parms{};

	Parms.IsOpen = IsOpen;
	Parms.Task = Task;
	Parms.IsPlayerInput = IsPlayerInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.NavUI_Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::NavUI_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "NavUI_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.NavUI_PlayAnim
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_TaskUI                               Task                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOpenAnim                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::NavUI_PlayAnim(EN_TaskUI Task, bool IsOpenAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "NavUI_PlayAnim");

	Params::UIM_HUD_C_NavUI_PlayAnim Parms{};

	Parms.Task = Task;
	Parms.IsOpenAnim = IsOpenAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.RefreshCashData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cash                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::RefreshCashData(int32 Cash, int32 Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "RefreshCashData");

	Params::UIM_HUD_C_RefreshCashData Parms{};

	Parms.Cash = Cash;
	Parms.Data = Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetFireMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_IconMode                             Safety                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_IconMode                             SemiAuto                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_IconMode                             FullAuto                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetFireMode(EN_IconMode Safety, EN_IconMode SemiAuto, EN_IconMode FullAuto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetFireMode");

	Params::UIM_HUD_C_SetFireMode Parms{};

	Parms.Safety = Safety;
	Parms.SemiAuto = SemiAuto;
	Parms.FullAuto = FullAuto;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetFridgeProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WaveCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetFridgeProgress(double Progress, int32 WaveCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetFridgeProgress");

	Params::UIM_HUD_C_SetFridgeProgress Parms{};

	Parms.Progress = Progress;
	Parms.WaveCount = WaveCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetHoleProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetHoleProgress(double Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetHoleProgress");

	Params::UIM_HUD_C_SetHoleProgress Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetHUDHP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHP                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetHUDHP(double HP, double MaxHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetHUDHP");

	Params::UIM_HUD_C_SetHUDHP Parms{};

	Parms.HP = HP;
	Parms.MaxHP = MaxHP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetLightMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_IconMode                             LightMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetLightMode(EN_IconMode LightMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetLightMode");

	Params::UIM_HUD_C_SetLightMode Parms{};

	Parms.LightMode = LightMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetReloadHint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChamberAmmoNum                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MagAmmoNum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMelee                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsJamming                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBoltAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBoltOpen                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetReloadHint(int32 ChamberAmmoNum, int32 MagAmmoNum, bool IsMelee, bool IsJamming, bool IsBoltAction, bool IsBoltOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetReloadHint");

	Params::UIM_HUD_C_SetReloadHint Parms{};

	Parms.ChamberAmmoNum = ChamberAmmoNum;
	Parms.MagAmmoNum = MagAmmoNum;
	Parms.IsMelee = IsMelee;
	Parms.IsJamming = IsJamming;
	Parms.IsBoltAction = IsBoltAction;
	Parms.IsBoltOpen = IsBoltOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.SetTargetKillCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetKillCount                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::SetTargetKillCount(int32 TargetKillCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "SetTargetKillCount");

	Params::UIM_HUD_C_SetTargetKillCount Parms{};

	Parms.TargetKillCount = TargetKillCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.ShowCashData
// (Public, BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::ShowCashData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ShowCashData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.ShowFridgeProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UUIM_HUD_C::ShowFridgeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ShowFridgeProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIM_HUD.UIM_HUD_C.ShowInteractUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_InteractUIText>&     Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUIM_HUD_C::ShowInteractUI(TArray<struct FStr_InteractUIText>& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ShowInteractUI");

	Params::UIM_HUD_C_ShowInteractUI Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	Text = std::move(Parms.Text);
}


// Function UIM_HUD.UIM_HUD_C.ShowPopup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsStack                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StackID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Stack_Amount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFitIcon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::ShowPopup(class UTexture2D* Icon, const class FText& Text, bool IsStack, class FName StackID, int32 Stack_Amount, bool IsFitIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "ShowPopup");

	Params::UIM_HUD_C_ShowPopup Parms{};

	Parms.Icon = Icon;
	Parms.Text = std::move(Text);
	Parms.IsStack = IsStack;
	Parms.StackID = StackID;
	Parms.Stack_Amount = Stack_Amount;
	Parms.IsFitIcon = IsFitIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.UpdateAmmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AmmoInChamber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmmoInMagazine                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::UpdateAmmo(int32 AmmoInChamber, int32 AmmoInMagazine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "UpdateAmmo");

	Params::UIM_HUD_C_UpdateAmmo Parms{};

	Parms.AmmoInChamber = AmmoInChamber;
	Parms.AmmoInMagazine = AmmoInMagazine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.UpdateBarrelHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BarrelHeat                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Normalized                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::UpdateBarrelHeat(double BarrelHeat, double Normalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "UpdateBarrelHeat");

	Params::UIM_HUD_C_UpdateBarrelHeat Parms{};

	Parms.BarrelHeat = BarrelHeat;
	Parms.Normalized = Normalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIM_HUD.UIM_HUD_C.UpdateSaveProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_SaveState                            SaveState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIM_HUD_C::UpdateSaveProgress(EN_SaveState SaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIM_HUD_C", "UpdateSaveProgress");

	Params::UIM_HUD_C_UpdateSaveProgress Parms{};

	Parms.SaveState = SaveState;

	UObject::ProcessEvent(Func, &Parms);
}

}

