#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GunParts_LightAndLaser

#include "Basic.hpp"

#include "BPI_GunParts_LightAndLaser_classes.hpp"
#include "BPI_GunParts_LightAndLaser_parameters.hpp"


namespace SDK
{

// Function BPI_GunParts_LightAndLaser.BPI_GunParts_LightAndLaser_C.ActivateDevice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GunParts_LightAndLaser_C::ActivateDevice(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GunParts_LightAndLaser_C", "ActivateDevice");

	Params::BPI_GunParts_LightAndLaser_C_ActivateDevice Parms{};

	Parms.IsPlayer = IsPlayer;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_GunParts_LightAndLaser.BPI_GunParts_LightAndLaser_C.DeactivateDevice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GunParts_LightAndLaser_C::DeactivateDevice(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GunParts_LightAndLaser_C", "DeactivateDevice");

	Params::BPI_GunParts_LightAndLaser_C_DeactivateDevice Parms{};

	Parms.IsPlayer = IsPlayer;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_GunParts_LightAndLaser.BPI_GunParts_LightAndLaser_C.GetDeviceMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_LightAndLaserDeviceMode*             DeviceMode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GunParts_LightAndLaser_C::GetDeviceMode(EN_LightAndLaserDeviceMode* DeviceMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GunParts_LightAndLaser_C", "GetDeviceMode");

	Params::BPI_GunParts_LightAndLaser_C_GetDeviceMode Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (DeviceMode != nullptr)
		*DeviceMode = Parms.DeviceMode;
}


// Function BPI_GunParts_LightAndLaser.BPI_GunParts_LightAndLaser_C.SetDeviceMalfunctionDownValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DownValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GunParts_LightAndLaser_C::SetDeviceMalfunctionDownValue(double DownValue, bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GunParts_LightAndLaser_C", "SetDeviceMalfunctionDownValue");

	Params::BPI_GunParts_LightAndLaser_C_SetDeviceMalfunctionDownValue Parms{};

	Parms.DownValue = DownValue;
	Parms.IsPlayer = IsPlayer;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_GunParts_LightAndLaser.BPI_GunParts_LightAndLaser_C.SwitchDeviceMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GunParts_LightAndLaser_C::SwitchDeviceMode(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_GunParts_LightAndLaser_C", "SwitchDeviceMode");

	Params::BPI_GunParts_LightAndLaser_C_SwitchDeviceMode Parms{};

	Parms.IsPlayer = IsPlayer;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

