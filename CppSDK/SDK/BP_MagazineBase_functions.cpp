#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MagazineBase

#include "Basic.hpp"

#include "BP_MagazineBase_classes.hpp"
#include "BP_MagazineBase_parameters.hpp"


namespace SDK
{

// Function BP_MagazineBase.BP_MagazineBase_C.GetAttachPoint_ReloadHand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent**                 ReloadHandPoint                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::GetAttachPoint_ReloadHand(class USceneComponent** ReloadHandPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "GetAttachPoint_ReloadHand");

	Params::BP_MagazineBase_C_GetAttachPoint_ReloadHand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReloadHandPoint != nullptr)
		*ReloadHandPoint = Parms.ReloadHandPoint;
}


// Function BP_MagazineBase.BP_MagazineBase_C.GetAttachPoint_Mag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent**                 MagPoint                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::GetAttachPoint_Mag(class USceneComponent** MagPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "GetAttachPoint_Mag");

	Params::BP_MagazineBase_C_GetAttachPoint_Mag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MagPoint != nullptr)
		*MagPoint = Parms.MagPoint;
}


// Function BP_MagazineBase.BP_MagazineBase_C.GetCurrentAmmoInMagazine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  AmmoInMagazine_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::GetCurrentAmmoInMagazine(int32* AmmoInMagazine_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "GetCurrentAmmoInMagazine");

	Params::BP_MagazineBase_C_GetCurrentAmmoInMagazine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AmmoInMagazine_0 != nullptr)
		*AmmoInMagazine_0 = Parms.AmmoInMagazine_0;
}


// Function BP_MagazineBase.BP_MagazineBase_C.GetMagazineCapacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  MagCapacity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::GetMagazineCapacity(int32* MagCapacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "GetMagazineCapacity");

	Params::BP_MagazineBase_C_GetMagazineCapacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MagCapacity != nullptr)
		*MagCapacity = Parms.MagCapacity;
}


// Function BP_MagazineBase.BP_MagazineBase_C.ChamberingOneRound
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttachPoint_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_AmmoBase_C**                  Ammo                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsEmpty                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::ChamberingOneRound(class USceneComponent* AttachPoint_0, class ABP_AmmoBase_C** Ammo, bool* IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "ChamberingOneRound");

	Params::BP_MagazineBase_C_ChamberingOneRound Parms{};

	Parms.AttachPoint_0 = AttachPoint_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Ammo != nullptr)
		*Ammo = Parms.Ammo;

	if (IsEmpty != nullptr)
		*IsEmpty = Parms.IsEmpty;
}


// Function BP_MagazineBase.BP_MagazineBase_C.SetVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::SetVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "SetVisibility");

	Params::BP_MagazineBase_C_SetVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MagazineBase.BP_MagazineBase_C.InitializeMagazine
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MagazineBase_C::InitializeMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "InitializeMagazine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MagazineBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MagazineBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.EmptyMag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MagazineBase_C::EmptyMag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "EmptyMag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.DropMagazine
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MagazineBase_C::DropMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "DropMagazine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.DestroyMag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MagazineBase_C::DestroyMag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "DestroyMag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MagazineBase.BP_MagazineBase_C.LoadSingleAmmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AmmoBase_C*                   AmmoObj                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::LoadSingleAmmo(class ABP_AmmoBase_C* AmmoObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "LoadSingleAmmo");

	Params::BP_MagazineBase_C_LoadSingleAmmo Parms{};

	Parms.AmmoObj = AmmoObj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MagazineBase.BP_MagazineBase_C.BndEvt__BP_BaseMagazine_MagazineMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_MagazineBase_C::BndEvt__BP_BaseMagazine_MagazineMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "BndEvt__BP_BaseMagazine_MagazineMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_MagazineBase_C_BndEvt__BP_BaseMagazine_MagazineMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MagazineBase.BP_MagazineBase_C.LoadFullAmmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LoadAmmoNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::LoadFullAmmo(int32 LoadAmmoNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "LoadFullAmmo");

	Params::BP_MagazineBase_C_LoadFullAmmo Parms{};

	Parms.LoadAmmoNum = LoadAmmoNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MagazineBase.BP_MagazineBase_C.CarrierUpShell
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  RelativeRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MagazineBase_C::CarrierUpShell(const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "CarrierUpShell");

	Params::BP_MagazineBase_C_CarrierUpShell Parms{};

	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.RelativeRotation = std::move(RelativeRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MagazineBase.BP_MagazineBase_C.ExecuteUbergraph_BP_MagazineBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MagazineBase_C::ExecuteUbergraph_BP_MagazineBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MagazineBase_C", "ExecuteUbergraph_BP_MagazineBase");

	Params::BP_MagazineBase_C_ExecuteUbergraph_BP_MagazineBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

