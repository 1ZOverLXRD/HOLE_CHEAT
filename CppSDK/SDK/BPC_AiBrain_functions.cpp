#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AiBrain

#include "Basic.hpp"

#include "BPC_AiBrain_classes.hpp"
#include "BPC_AiBrain_parameters.hpp"


namespace SDK
{

// Function BPC_AiBrain.BPC_AiBrain_C.BoltCatchRelease
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::BoltCatchRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "BoltCatchRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.CanStartFire
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Fire                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::CanStartFire(bool* Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "CanStartFire");

	Params::BPC_AiBrain_C_CanStartFire Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Fire != nullptr)
		*Fire = Parms.Fire;
}


// Function BPC_AiBrain.BPC_AiBrain_C.ChamberAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::ChamberAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ChamberAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.ChangeMoveSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait                               MoveSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::ChangeMoveSpeed(EALS_Gait MoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ChangeMoveSpeed");

	Params::BPC_AiBrain_C_ChangeMoveSpeed Parms{};

	Parms.MoveSpeed = MoveSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.CheckStuck
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::CheckStuck(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "CheckStuck");

	Params::BPC_AiBrain_C_CheckStuck Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.CleanUpActorMemory
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::CleanUpActorMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "CleanUpActorMemory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.EndDamageTimer
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::EndDamageTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "EndDamageTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.EndRagdoll
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::EndRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "EndRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.ExecuteUbergraph_BPC_AiBrain
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::ExecuteUbergraph_BPC_AiBrain(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ExecuteUbergraph_BPC_AiBrain");

	Params::BPC_AiBrain_C_ExecuteUbergraph_BPC_AiBrain Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.FireOFF
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::FireOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "FireOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.FireON
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_GunFirePattern                       GunFirePattern                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::FireON(EN_GunFirePattern GunFirePattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "FireON");

	Params::BPC_AiBrain_C_FireON Parms{};

	Parms.GunFirePattern = GunFirePattern;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.GenerateSearchPosition
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   CenterPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RadiusLimit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         SearchPosition_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GenerateSearchPosition(const struct FVector& CenterPosition, float RadiusLimit, struct FVector* SearchPosition_0, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GenerateSearchPosition");

	Params::BPC_AiBrain_C_GenerateSearchPosition Parms{};

	Parms.CenterPosition = std::move(CenterPosition);
	Parms.RadiusLimit = RadiusLimit;

	UObject::ProcessEvent(Func, &Parms);

	if (SearchPosition_0 != nullptr)
		*SearchPosition_0 = std::move(Parms.SearchPosition_0);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetCanTaskExecute
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanExecute                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetCanTaskExecute(bool* CanExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetCanTaskExecute");

	Params::BPC_AiBrain_C_GetCanTaskExecute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanExecute != nullptr)
		*CanExecute = Parms.CanExecute;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetClosestFoundActor
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          TargetActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetClosestFoundActor(class AActor** TargetActor, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetClosestFoundActor");

	Params::BPC_AiBrain_C_GetClosestFoundActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetCombatMoveStyle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait*                              CombatMoveStyle_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetCombatMoveStyle(EALS_Gait* CombatMoveStyle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetCombatMoveStyle");

	Params::BPC_AiBrain_C_GetCombatMoveStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CombatMoveStyle_0 != nullptr)
		*CombatMoveStyle_0 = Parms.CombatMoveStyle_0;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetCoverLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         CoverLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetCoverLocation(struct FVector* CoverLocation, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetCoverLocation");

	Params::BPC_AiBrain_C_GetCoverLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CoverLocation != nullptr)
		*CoverLocation = std::move(Parms.CoverLocation);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetDefaultTaskXXXHoryu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EN_MoveTaskName*                        DefaultMoveTask_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_CombatTaskName*                      DefaultCombatTask_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetDefaultTaskXXXHoryu(EN_MoveTaskName* DefaultMoveTask_0, EN_CombatTaskName* DefaultCombatTask_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetDefaultTaskXXXHoryu");

	Params::BPC_AiBrain_C_GetDefaultTaskXXXHoryu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultMoveTask_0 != nullptr)
		*DefaultMoveTask_0 = Parms.DefaultMoveTask_0;

	if (DefaultCombatTask_0 != nullptr)
		*DefaultCombatTask_0 = Parms.DefaultCombatTask_0;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetFaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_Faction*                             Faction                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetFaction(EN_Faction* Faction, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetFaction");

	Params::BPC_AiBrain_C_GetFaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Faction != nullptr)
		*Faction = Parms.Faction;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetFocusTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          FocusTargetActor                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetFocusTargetActor(class AActor** FocusTargetActor, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetFocusTargetActor");

	Params::BPC_AiBrain_C_GetFocusTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FocusTargetActor != nullptr)
		*FocusTargetActor = Parms.FocusTargetActor;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetFridgeLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetFridgeLocation(struct FVector* Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetFridgeLocation");

	Params::BPC_AiBrain_C_GetFridgeLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetNeedUpdateTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NeedUpdateMoveTask_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   NeedUpdateCombatTask_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetNeedUpdateTask(bool* NeedUpdateMoveTask_0, bool* NeedUpdateCombatTask_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetNeedUpdateTask");

	Params::BPC_AiBrain_C_GetNeedUpdateTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NeedUpdateMoveTask_0 != nullptr)
		*NeedUpdateMoveTask_0 = Parms.NeedUpdateMoveTask_0;

	if (NeedUpdateCombatTask_0 != nullptr)
		*NeedUpdateCombatTask_0 = Parms.NeedUpdateCombatTask_0;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetRandomLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Random_Location                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetRandomLocation(struct FVector* Random_Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetRandomLocation");

	Params::BPC_AiBrain_C_GetRandomLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Random_Location != nullptr)
		*Random_Location = std::move(Parms.Random_Location);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetSearchSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         SearchPosition_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALS_Gait*                              SearchingMoveStyle_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetSearchSetting(struct FVector* SearchPosition_0, EALS_Gait* SearchingMoveStyle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetSearchSetting");

	Params::BPC_AiBrain_C_GetSearchSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SearchPosition_0 != nullptr)
		*SearchPosition_0 = std::move(Parms.SearchPosition_0);

	if (SearchingMoveStyle_0 != nullptr)
		*SearchingMoveStyle_0 = Parms.SearchingMoveStyle_0;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetTask
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMTask_Base_C**                   MoveTask                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCTask_Base_C**                   CombatTask                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetTask(class UMTask_Base_C** MoveTask, class UCTask_Base_C** CombatTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetTask");

	Params::BPC_AiBrain_C_GetTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveTask != nullptr)
		*MoveTask = Parms.MoveTask;

	if (CombatTask != nullptr)
		*CombatTask = Parms.CombatTask;
}


// Function BPC_AiBrain.BPC_AiBrain_C.GetWaitPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         WaitPosition_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::GetWaitPosition(struct FVector* WaitPosition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "GetWaitPosition");

	Params::BPC_AiBrain_C_GetWaitPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WaitPosition_0 != nullptr)
		*WaitPosition_0 = std::move(Parms.WaitPosition_0);
}


// Function BPC_AiBrain.BPC_AiBrain_C.HereIsFridgeLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsFridgeLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::HereIsFridgeLocation(bool* IsFridgeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "HereIsFridgeLocation");

	Params::BPC_AiBrain_C_HereIsFridgeLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFridgeLocation != nullptr)
		*IsFridgeLocation = Parms.IsFridgeLocation;
}


// Function BPC_AiBrain.BPC_AiBrain_C.InitializeBrain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAI_NPCBase_C*                    AIController_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBPC_AiDepthScaner_C*             AiDepthScaner_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EN_MoveTaskName                         FirstMoveTask                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::InitializeBrain(class AAI_NPCBase_C* AIController_0, class UBPC_AiDepthScaner_C* AiDepthScaner_0, EN_MoveTaskName FirstMoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "InitializeBrain");

	Params::BPC_AiBrain_C_InitializeBrain Parms{};

	Parms.AIController_0 = AIController_0;
	Parms.AiDepthScaner_0 = AiDepthScaner_0;
	Parms.FirstMoveTask = FirstMoveTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.InitializeBrainData
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAI_NPCBase_C*                    AIController_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBPC_AiDepthScaner_C*             AiDepthScaner_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EN_MoveTaskName                         FirstMoveTask                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::InitializeBrainData(class AAI_NPCBase_C* AIController_0, class UBPC_AiDepthScaner_C* AiDepthScaner_0, EN_MoveTaskName FirstMoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "InitializeBrainData");

	Params::BPC_AiBrain_C_InitializeBrainData Parms{};

	Parms.AIController_0 = AIController_0;
	Parms.AiDepthScaner_0 = AiDepthScaner_0;
	Parms.FirstMoveTask = FirstMoveTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.InsertCombatTask
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_CombatTaskName                       NewCombatTask                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::InsertCombatTask(EN_CombatTaskName NewCombatTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "InsertCombatTask");

	Params::BPC_AiBrain_C_InsertCombatTask Parms{};

	Parms.NewCombatTask = NewCombatTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.IsDeadBrain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDead                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::IsDeadBrain(bool* IsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "IsDeadBrain");

	Params::BPC_AiBrain_C_IsDeadBrain Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDead != nullptr)
		*IsDead = Parms.IsDead;
}


// Function BPC_AiBrain.BPC_AiBrain_C.MakeCombatMoveXXX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_MoveTaskName*                        MoveTask                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::MakeCombatMoveXXX(EN_MoveTaskName* MoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "MakeCombatMoveXXX");

	Params::BPC_AiBrain_C_MakeCombatMoveXXX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveTask != nullptr)
		*MoveTask = Parms.MoveTask;
}


// Function BPC_AiBrain.BPC_AiBrain_C.MeleeAttack
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::MeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "MeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.OffHeardSomething
// (BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::OffHeardSomething()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "OffHeardSomething");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.OffsetFocusLocationByMovementAndDistance
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusTagetActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         FocusLocation_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FluctuationFactor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::OffsetFocusLocationByMovementAndDistance(class AActor* FocusTagetActor, struct FVector* FocusLocation_0, double* FluctuationFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "OffsetFocusLocationByMovementAndDistance");

	Params::BPC_AiBrain_C_OffsetFocusLocationByMovementAndDistance Parms{};

	Parms.FocusTagetActor = FocusTagetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (FocusLocation_0 != nullptr)
		*FocusLocation_0 = std::move(Parms.FocusLocation_0);

	if (FluctuationFactor != nullptr)
		*FluctuationFactor = Parms.FluctuationFactor;
}


// Function BPC_AiBrain.BPC_AiBrain_C.RefreshTask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RefreshMoveTask                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::RefreshTask(double DeltaSeconds, bool RefreshMoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "RefreshTask");

	Params::BPC_AiBrain_C_RefreshTask Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.RefreshMoveTask = RefreshMoveTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.ReloadAmmo
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::ReloadAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ReloadAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.RemoveCombatTask
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_CombatTaskName                       RemoveCombatTask_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::RemoveCombatTask(EN_CombatTaskName RemoveCombatTask_0, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "RemoveCombatTask");

	Params::BPC_AiBrain_C_RemoveCombatTask Parms{};

	Parms.RemoveCombatTask_0 = RemoveCombatTask_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_AiBrain.BPC_AiBrain_C.ResetComponentParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_NPCLogicPattern                      LogicPattern_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_CombatType                           CombatType_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_ShootingLevel                        ShootingLevel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_NPCRole                              RoleType_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::ResetComponentParam(EN_NPCLogicPattern LogicPattern_0, EN_CombatType CombatType_0, EN_ShootingLevel ShootingLevel_0, EN_NPCRole RoleType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ResetComponentParam");

	Params::BPC_AiBrain_C_ResetComponentParam Parms{};

	Parms.LogicPattern_0 = LogicPattern_0;
	Parms.CombatType_0 = CombatType_0;
	Parms.ShootingLevel_0 = ShootingLevel_0;
	Parms.RoleType_0 = RoleType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.ResetFocusLocation
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::ResetFocusLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "ResetFocusLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.RestartBrainByALSBP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::RestartBrainByALSBP(double EndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "RestartBrainByALSBP");

	Params::BPC_AiBrain_C_RestartBrainByALSBP Parms{};

	Parms.EndTime = EndTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SendDeadEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::SendDeadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SendDeadEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SendFocusDataToFocsuLocator
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   FocusLocation_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_LocatorMoveMode                      Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FluctuationFactor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SendFocusDataToFocsuLocator(const struct FVector& FocusLocation_0, EN_LocatorMoveMode Mode, double FluctuationFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SendFocusDataToFocsuLocator");

	Params::BPC_AiBrain_C_SendFocusDataToFocsuLocator Parms{};

	Parms.FocusLocation_0 = std::move(FocusLocation_0);
	Parms.Mode = Mode;
	Parms.FluctuationFactor = FluctuationFactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SetFoundActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isFoundActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           FoundActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SetFoundActor(bool isFoundActor, class AActor* FoundActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SetFoundActor");

	Params::BPC_AiBrain_C_SetFoundActor Parms{};

	Parms.isFoundActor = isFoundActor;
	Parms.FoundActor = FoundActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SetFoundActorByAIPer
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isFoundActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           FoundActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SetFoundActorByAIPer(bool isFoundActor, class AActor* FoundActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SetFoundActorByAIPer");

	Params::BPC_AiBrain_C_SetFoundActorByAIPer Parms{};

	Parms.isFoundActor = isFoundActor;
	Parms.FoundActor = FoundActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SetHearingInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HeardSomething_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HearingLocation_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SetHearingInfo(bool HeardSomething_0, const struct FVector& HearingLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SetHearingInfo");

	Params::BPC_AiBrain_C_SetHearingInfo Parms{};

	Parms.HeardSomething_0 = HeardSomething_0;
	Parms.HearingLocation_0 = std::move(HearingLocation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SetMoveTaskXXXMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMTask_Base_C*                    MoveTask                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SetMoveTaskXXXMove(class UMTask_Base_C* MoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SetMoveTaskXXXMove");

	Params::BPC_AiBrain_C_SetMoveTaskXXXMove Parms{};

	Parms.MoveTask = MoveTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.SetOnDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   EventLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::SetOnDamage(const struct FVector& EventLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "SetOnDamage");

	Params::BPC_AiBrain_C_SetOnDamage Parms{};

	Parms.EventLocation = std::move(EventLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.StartDamageTimer
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::StartDamageTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "StartDamageTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.StopTaskExecute
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::StopTaskExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "StopTaskExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateAmmoInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateAmmoInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateAmmoInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateBrainData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateBrainData(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateBrainData");

	Params::BPC_AiBrain_C_UpdateBrainData Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateCombatTask
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateCombatTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateCombatTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateDistanceToTargetActor
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateDistanceToTargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateDistanceToTargetActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFocusActor
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateFocusActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFocusActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFocusActorLocationMemory
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateFocusActorLocationMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFocusActorLocationMemory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFocusActorPositionMemory
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateFocusActorPositionMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFocusActorPositionMemory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFocusLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateFocusLocation(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFocusLocation");

	Params::BPC_AiBrain_C_UpdateFocusLocation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFocusLocationByBTService
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateFocusLocationByBTService(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFocusLocationByBTService");

	Params::BPC_AiBrain_C_UpdateFocusLocationByBTService Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFoundActorMemory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateFoundActorMemory(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFoundActorMemory");

	Params::BPC_AiBrain_C_UpdateFoundActorMemory Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateFullReloadBlockTime
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateFullReloadBlockTime(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateFullReloadBlockTime");

	Params::BPC_AiBrain_C_UpdateFullReloadBlockTime Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateIFF
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateIFF(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateIFF");

	Params::BPC_AiBrain_C_UpdateIFF Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateLostActorMemory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateLostActorMemory(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateLostActorMemory");

	Params::BPC_AiBrain_C_UpdateLostActorMemory Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateMeleeRangeLocater
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateMeleeRangeLocater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateMeleeRangeLocater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateMoveTask_DoneXXXMove
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateMoveTask_DoneXXXMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateMoveTask_DoneXXXMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateRagdollFlag
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AiBrain_C::UpdateRagdollFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateRagdollFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateSearchPhaseXXXMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateSearchPhaseXXXMove(double Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateSearchPhaseXXXMove");

	Params::BPC_AiBrain_C_UpdateSearchPhaseXXXMove Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateSerchFlag
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateSerchFlag(double DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateSerchFlag");

	Params::BPC_AiBrain_C_UpdateSerchFlag Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateStuckTimeInSearch
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateStuckTimeInSearch(double DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateStuckTimeInSearch");

	Params::BPC_AiBrain_C_UpdateStuckTimeInSearch Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateTaskManager
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateTaskManager(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateTaskManager");

	Params::BPC_AiBrain_C_UpdateTaskManager Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AiBrain.BPC_AiBrain_C.UpdateVoiceControl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AiBrain_C::UpdateVoiceControl(double DeltaSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AiBrain_C", "UpdateVoiceControl");

	Params::BPC_AiBrain_C_UpdateVoiceControl Parms{};

	Parms.DeltaSecond = DeltaSecond;

	UObject::ProcessEvent(Func, &Parms);
}

}

