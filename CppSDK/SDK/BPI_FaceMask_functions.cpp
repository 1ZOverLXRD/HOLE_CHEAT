#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FaceMask

#include "Basic.hpp"

#include "BPI_FaceMask_classes.hpp"
#include "BPI_FaceMask_parameters.hpp"


namespace SDK
{

// Function BPI_FaceMask.BPI_FaceMask_C.DetachMask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHeadShot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FaceMask_C::DetachMask(bool IsHeadShot, int32 Hit, const struct FVector& HitDirection, const struct FVector& HitPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FaceMask_C", "DetachMask");

	Params::BPI_FaceMask_C_DetachMask Parms{};

	Parms.IsHeadShot = IsHeadShot;
	Parms.Hit = Hit;
	Parms.HitDirection = std::move(HitDirection);
	Parms.HitPosition = std::move(HitPosition);

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

