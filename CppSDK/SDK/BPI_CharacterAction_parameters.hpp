#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharacterAction

#include "Basic.hpp"

#include "WeaponSelector_structs.hpp"


namespace SDK::Params
{

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_AimMotion
// 0x0002 (0x0002 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_AimMotion final
{
public:
	bool                                          AimIN;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MuteSE;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_AimMotion;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_AimMotion_CanAim
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_AimMotion_CanAim final
{
public:
	bool                                          CanAim;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_AimMotion_CanAim;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_Charge
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_Charge final
{
public:
	bool                                          Press_Released;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_Charge;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_HoldBreath
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_HoldBreath final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_HoldBreath;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_Lean
// 0x0002 (0x0002 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_Lean final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRight;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_Lean;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_MeleeAttack
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_MeleeAttack final
{
public:
	bool                                          Press_Released;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_MeleeAttack;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_ScrollWeapon
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_ScrollWeapon final
{
public:
	bool                                          IsUp;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_ScrollWeapon;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_SwitchLight
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_SwitchLight final
{
public:
	bool                                          IsPressed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_SwitchLight;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_SwitchWeapon
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_SwitchWeapon final
{
public:
	EWeaponSelector                               SwitchTo;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_SwitchWeapon;

// Function BPI_CharacterAction.BPI_CharacterAction_C.PlayerInput_UseWeapon
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterAction_C_PlayerInput_UseWeapon final
{
public:
	bool                                          Press_Released;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_CharacterAction_C_PlayerInput_UseWeapon;

}

