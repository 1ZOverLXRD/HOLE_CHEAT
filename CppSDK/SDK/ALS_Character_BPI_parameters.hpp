#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_Character_BPI

#include "Basic.hpp"

#include "ALS_Stance_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LeanState_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "WeaponMotionState_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "Engine_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "ALS_MovementAction_structs.hpp"
#include "Str_KickAnimValue_structs.hpp"


namespace SDK::Params
{

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Get_CurrentStates
// 0x000B (0x000B - 0x0000)
struct ALS_Character_BPI_C_BPI_Get_CurrentStates final
{
public:
	EMovementMode                                 PawnMovementMode;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            MovementState;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            PrevMovementState;                                 // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           MovementAction;                                    // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             RotationMode;                                      // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     ActualGait;                                        // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   ActualStance;                                      // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 ViewMode;                                          // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             OverlayState;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeanState                                    LeanState;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponMotionState                            WeaponMotionState;                                 // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Get_CurrentStates;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Get_EssentialValues
// 0x0118 (0x0118 - 0x0000)
struct ALS_Character_BPI_C_BPI_Get_EssentialValues final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Acceleration;                                      // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementInput;                                     // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMovementInput;                                  // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementInputAmount;                               // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimingRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        AimYawRate;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraRollAngle;                                   // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraPitchAngle;                                  // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RecoilHandAngle;                                   // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTriggerPull;                                     // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTriggerOFF;                                      // 0x0099(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HandIK_Location_L;                                 // 0x00A0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HandIK_Rotation_L;                                 // 0x00B8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        HoldBreathFactor;                                  // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanAlpha;                                         // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponAttachHandIsRight;                           // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayer;                                          // 0x00E1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlayerHeadBobAlpha;                                // 0x00E8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_KickAnimValue                     KickAnimValue;                                     // 0x00F0(0x0028)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Get_EssentialValues;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_GetSkeltalMesh
// 0x0008 (0x0008 - 0x0000)
struct ALS_Character_BPI_C_BPI_GetSkeltalMesh final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComp;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_GetSkeltalMesh;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_Gait
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_Gait final
{
public:
	EALS_Gait                                     NewGait;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_Gait;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_LeanState
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_LeanState final
{
public:
	ELeanState                                    NewLeanState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_LeanState;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_MovementAction
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_MovementAction final
{
public:
	EALS_MovementAction                           NewMovementAction;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_MovementAction;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_MovementState
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_MovementState final
{
public:
	EALS_MovementState                            NewMovementState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_MovementState;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_OverlayState
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_OverlayState final
{
public:
	EALS_OverlayState                             NewOverlayState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_OverlayState;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_RotationMode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_RotationMode final
{
public:
	EALS_RotationMode                             NewRotationMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_RotationMode;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_Set_ViewMode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Character_BPI_C_BPI_Set_ViewMode final
{
public:
	EALS_ViewMode                                 NewViewMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_Set_ViewMode;

// Function ALS_Character_BPI.ALS_Character_BPI_C.BPI_TeleportCharacter
// 0x0030 (0x0030 - 0x0000)
struct ALS_Character_BPI_C_BPI_TeleportCharacter final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
DUMPER7_ASSERTS_ALS_Character_BPI_C_BPI_TeleportCharacter;

}

