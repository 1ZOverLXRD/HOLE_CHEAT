#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerHUD

#include "Basic.hpp"

#include "BPI_PlayerHUD_classes.hpp"
#include "BPI_PlayerHUD_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerHUD.BPI_PlayerHUD_C.CountTargetKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AliveTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::CountTargetKill(int32 AliveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "CountTargetKill");

	Params::BPI_PlayerHUD_C_CountTargetKill Parms{};

	Parms.AliveTarget = AliveTarget;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HideCashData
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::HideCashData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HideCashData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HideHud
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::HideHud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HideHud");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HideInteractUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAnim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::HideInteractUI(bool IsAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HideInteractUI");

	Params::BPI_PlayerHUD_C_HideInteractUI Parms{};

	Parms.IsAnim = IsAnim;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HUD_SetBarrelHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Heat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Normalized                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::HUD_SetBarrelHeat(double Heat, double Normalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HUD_SetBarrelHeat");

	Params::BPI_PlayerHUD_C_HUD_SetBarrelHeat Parms{};

	Parms.Heat = Heat;
	Parms.Normalized = Normalized;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HUD_SetHoleProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::HUD_SetHoleProgress(double Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HUD_SetHoleProgress");

	Params::BPI_PlayerHUD_C_HUD_SetHoleProgress Parms{};

	Parms.Percent = Percent;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.HUD_SetTask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_TaskUI                               Task                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::HUD_SetTask(EN_TaskUI Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "HUD_SetTask");

	Params::BPI_PlayerHUD_C_HUD_SetTask Parms{};

	Parms.Task = Task;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.InitializeHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstVisibility                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_TaskUI                               StartTask                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::InitializeHUD(bool FirstVisibility, EN_TaskUI StartTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "InitializeHUD");

	Params::BPI_PlayerHUD_C_InitializeHUD Parms{};

	Parms.FirstVisibility = FirstVisibility;
	Parms.StartTask = StartTask;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.RefreshCashData
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::RefreshCashData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "RefreshCashData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.RefreshHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Crosshair                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   TaskIcon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   HUDMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::RefreshHUD(bool Crosshair, uint8 TaskIcon, uint8 HUDMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "RefreshHUD");

	Params::BPI_PlayerHUD_C_RefreshHUD Parms{};

	Parms.Crosshair = Crosshair;
	Parms.TaskIcon = TaskIcon;
	Parms.HUDMode = HUDMode;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.ResetInteractLineTrace
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::ResetInteractLineTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "ResetInteractLineTrace");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.SetFridgeProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Wave                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::SetFridgeProgress(double Progress, int32 Wave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "SetFridgeProgress");

	Params::BPI_PlayerHUD_C_SetFridgeProgress Parms{};

	Parms.Progress = Progress;
	Parms.Wave = Wave;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.ShowCashData
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::ShowCashData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "ShowCashData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.ShowHUD
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerHUD_C::ShowHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "ShowHUD");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.ShowInteractUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FStr_InteractUIText>&Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void IBPI_PlayerHUD_C::ShowInteractUI(const TArray<struct FStr_InteractUIText>& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "ShowInteractUI");

	Params::BPI_PlayerHUD_C_ShowInteractUI Parms{};

	Parms.Text = std::move(Text);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerHUD.BPI_PlayerHUD_C.ShowPopup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsStack                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StackID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StackAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFitIcon_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerHUD_C::ShowPopup(class UTexture2D* Icon, const class FText& Text, bool IsStack, class FName StackID, int32 StackAmount, bool IsFitIcon_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerHUD_C", "ShowPopup");

	Params::BPI_PlayerHUD_C_ShowPopup Parms{};

	Parms.Icon = Icon;
	Parms.Text = std::move(Text);
	Parms.IsStack = IsStack;
	Parms.StackID = StackID;
	Parms.StackAmount = StackAmount;
	Parms.IsFitIcon_ = IsFitIcon_;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

