#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponBase

#include "Basic.hpp"

#include "BP_WeaponBase_classes.hpp"
#include "BP_WeaponBase_parameters.hpp"


namespace SDK
{

// Function BP_WeaponBase.BP_WeaponBase_C.GetCurrentSightMagnification
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 LensMagnificationFactor                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::GetCurrentSightMagnification(double* LensMagnificationFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "GetCurrentSightMagnification");

	Params::BP_WeaponBase_C_GetCurrentSightMagnification Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LensMagnificationFactor != nullptr)
		*LensMagnificationFactor = Parms.LensMagnificationFactor;
}


// Function BP_WeaponBase.BP_WeaponBase_C.GetCurrentSightIsScope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsScope                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::GetCurrentSightIsScope(bool* IsScope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "GetCurrentSightIsScope");

	Params::BP_WeaponBase_C_GetCurrentSightIsScope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScope != nullptr)
		*IsScope = Parms.IsScope;
}


// Function BP_WeaponBase.BP_WeaponBase_C.GetMainHandLocationRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         RelativeLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        RelativeRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WeaponBase_C::GetMainHandLocationRotation(struct FVector* RelativeLocation, struct FRotator* RelativeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "GetMainHandLocationRotation");

	Params::BP_WeaponBase_C_GetMainHandLocationRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RelativeLocation != nullptr)
		*RelativeLocation = std::move(Parms.RelativeLocation);

	if (RelativeRotation != nullptr)
		*RelativeRotation = std::move(Parms.RelativeRotation);
}


// Function BP_WeaponBase.BP_WeaponBase_C.UseWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTriggerReleased                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::UseWeapon(bool IsTriggerReleased, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "UseWeapon");

	Params::BP_WeaponBase_C_UseWeapon Parms{};

	Parms.IsTriggerReleased = IsTriggerReleased;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_WeaponBase.BP_WeaponBase_C.ClearWeaponParts
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WeaponBase_C::ClearWeaponParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "ClearWeaponParts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.FindWeaponPartsBySlotIndexPath
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>&                          SlotIndexPath                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ABP_WeaponPartsBase_C**           WeaponParts_0                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::FindWeaponPartsBySlotIndexPath(TArray<uint8>& SlotIndexPath, class ABP_WeaponPartsBase_C** WeaponParts_0, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "FindWeaponPartsBySlotIndexPath");

	Params::BP_WeaponBase_C_FindWeaponPartsBySlotIndexPath Parms{};

	Parms.SlotIndexPath = std::move(SlotIndexPath);

	UObject::ProcessEvent(Func, &Parms);

	SlotIndexPath = std::move(Parms.SlotIndexPath);

	if (WeaponParts_0 != nullptr)
		*WeaponParts_0 = Parms.WeaponParts_0;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_WeaponBase.BP_WeaponBase_C.GetParentSlotIndexPath
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>&                          SelfSlotIndexPath                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<uint8>*                          ParentSlotIndexPath                                    (Parm, OutParm)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::GetParentSlotIndexPath(TArray<uint8>& SelfSlotIndexPath, TArray<uint8>* ParentSlotIndexPath, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "GetParentSlotIndexPath");

	Params::BP_WeaponBase_C_GetParentSlotIndexPath Parms{};

	Parms.SelfSlotIndexPath = std::move(SelfSlotIndexPath);

	UObject::ProcessEvent(Func, &Parms);

	SelfSlotIndexPath = std::move(Parms.SelfSlotIndexPath);

	if (ParentSlotIndexPath != nullptr)
		*ParentSlotIndexPath = std::move(Parms.ParentSlotIndexPath);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_WeaponBase.BP_WeaponBase_C.Init_CalcurateWeaponSpec
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WeaponBase_C::Init_CalcurateWeaponSpec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "Init_CalcurateWeaponSpec");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.Init_GenerateWeaponPartsByCustomData
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStr_WeaponCustomMetaData& WeaponCustomMetaData_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_WeaponBase_C::Init_GenerateWeaponPartsByCustomData(const struct FStr_WeaponCustomMetaData& WeaponCustomMetaData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "Init_GenerateWeaponPartsByCustomData");

	Params::BP_WeaponBase_C_Init_GenerateWeaponPartsByCustomData Parms{};

	Parms.WeaponCustomMetaData_0 = std::move(WeaponCustomMetaData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.Init_GenerateWeaponParts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GenerateDefaultWeaponParts                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::Init_GenerateWeaponParts(bool GenerateDefaultWeaponParts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "Init_GenerateWeaponParts");

	Params::BP_WeaponBase_C_Init_GenerateWeaponParts Parms{};

	Parms.GenerateDefaultWeaponParts = GenerateDefaultWeaponParts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.Init_CollectWeaponPartsSlotPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeaponBase_C::Init_CollectWeaponPartsSlotPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "Init_CollectWeaponPartsSlotPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.InitializeWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InitializeDefaultWeaponParts                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::InitializeWeapon(bool InitializeDefaultWeaponParts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "InitializeWeapon");

	Params::BP_WeaponBase_C_InitializeWeapon Parms{};

	Parms.InitializeDefaultWeaponParts = InitializeDefaultWeaponParts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.SetOffsetTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOffset_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::SetOffsetTransform(bool IsOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "SetOffsetTransform");

	Params::BP_WeaponBase_C_SetOffsetTransform Parms{};

	Parms.IsOffset_0 = IsOffset_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.SetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::SetVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "SetVisibility");

	Params::BP_WeaponBase_C_SetVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.Get Hand IKLocation Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_WeaponBase_C::Get_Hand_IKLocation_Rotation(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "Get Hand IKLocation Rotation");

	Params::BP_WeaponBase_C_Get_Hand_IKLocation_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_WeaponBase.BP_WeaponBase_C.ClearWeaponUser
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WeaponBase_C::ClearWeaponUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "ClearWeaponUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.GetWeaponUser
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor**                          WeaponUser_0                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::GetWeaponUser(class AActor** WeaponUser_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "GetWeaponUser");

	Params::BP_WeaponBase_C_GetWeaponUser Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponUser_0 != nullptr)
		*WeaponUser_0 = Parms.WeaponUser_0;
}


// Function BP_WeaponBase.BP_WeaponBase_C.SetWeaponUser
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           WeaponUser_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::SetWeaponUser(class AActor* WeaponUser_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "SetWeaponUser");

	Params::BP_WeaponBase_C_SetWeaponUser Parms{};

	Parms.WeaponUser_0 = WeaponUser_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeaponBase.BP_WeaponBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_WeaponBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WeaponBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeaponBase.BP_WeaponBase_C.ExecuteUbergraph_BP_WeaponBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeaponBase_C::ExecuteUbergraph_BP_WeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeaponBase_C", "ExecuteUbergraph_BP_WeaponBase");

	Params::BP_WeaponBase_C_ExecuteUbergraph_BP_WeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

