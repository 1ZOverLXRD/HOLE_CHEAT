#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SingleBullet_LineTrace

#include "Basic.hpp"

#include "BP_SingleBullet_LineTrace_classes.hpp"
#include "BP_SingleBullet_LineTrace_parameters.hpp"


namespace SDK
{

// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.Bullet Hit Function
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                PhysMat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             HitBoneName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPenetrated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::Bullet_Hit_Function(const struct FVector& HitLocation, const struct FVector& HitDirection, class AActor* HitActor, class UPhysicalMaterial* PhysMat, class FName HitBoneName, class UPrimitiveComponent* HitComponent, bool IsPenetrated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "Bullet Hit Function");

	Params::BP_SingleBullet_LineTrace_C_Bullet_Hit_Function Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitDirection = std::move(HitDirection);
	Parms.HitActor = HitActor;
	Parms.PhysMat = PhysMat;
	Parms.HitBoneName = HitBoneName;
	Parms.HitComponent = HitComponent;
	Parms.IsPenetrated = IsPenetrated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.Bullet_Fire
// (BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::Bullet_Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "Bullet_Fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.BulletHitSoundAndFX
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPhysicalMaterial*                PhysMat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPenetrated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             HitBone_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::BulletHitSoundAndFX(class UPhysicalMaterial* PhysMat, const struct FVector& HitLocation, const struct FVector& HitDirection, bool IsPenetrated, class UPrimitiveComponent* HitComponent, class FName HitBone_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "BulletHitSoundAndFX");

	Params::BP_SingleBullet_LineTrace_C_BulletHitSoundAndFX Parms{};

	Parms.PhysMat = PhysMat;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitDirection = std::move(HitDirection);
	Parms.IsPenetrated = IsPenetrated;
	Parms.HitComponent = HitComponent;
	Parms.HitBone_0 = HitBone_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.CalcInitialVelocity
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::CalcInitialVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "CalcInitialVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.CheckCloseBoneHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             HitBoneName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   EnableHitEvent                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::CheckCloseBoneHit(class AActor* HitActor, class FName HitBoneName, bool* EnableHitEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "CheckCloseBoneHit");

	Params::BP_SingleBullet_LineTrace_C_CheckCloseBoneHit Parms{};

	Parms.HitActor = HitActor;
	Parms.HitBoneName = HitBoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (EnableHitEvent != nullptr)
		*EnableHitEvent = Parms.EnableHitEvent;
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.DestroyBullet
// (BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::DestroyBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "DestroyBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.ExecuteUbergraph_BP_SingleBullet_LineTrace
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::ExecuteUbergraph_BP_SingleBullet_LineTrace(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "ExecuteUbergraph_BP_SingleBullet_LineTrace");

	Params::BP_SingleBullet_LineTrace_C_ExecuteUbergraph_BP_SingleBullet_LineTrace Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.InitializeBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::InitializeBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "InitializeBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.IsHitBoneSameCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HitBoneName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSameCategory                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::IsHitBoneSameCategory(class FName HitBoneName, bool* IsSameCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "IsHitBoneSameCategory");

	Params::BP_SingleBullet_LineTrace_C_IsHitBoneSameCategory Parms{};

	Parms.HitBoneName = HitBoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSameCategory != nullptr)
		*IsSameCategory = Parms.IsSameCategory;
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.PenetrationCheck
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPhysicalMaterial*                Phys_Mat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsBlocked                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::PenetrationCheck(class UPhysicalMaterial* Phys_Mat, bool* IsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "PenetrationCheck");

	Params::BP_SingleBullet_LineTrace_C_PenetrationCheck Parms{};

	Parms.Phys_Mat = Phys_Mat;

	UObject::ProcessEvent(Func, &Parms);

	if (IsBlocked != nullptr)
		*IsBlocked = Parms.IsBlocked;
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "ReceiveTick");

	Params::BP_SingleBullet_LineTrace_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.UpdateBulletLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SingleBullet_LineTrace_C::UpdateBulletLocation(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "UpdateBulletLocation");

	Params::BP_SingleBullet_LineTrace_C_UpdateBulletLocation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.UpdateDebug
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::UpdateDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "UpdateDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SingleBullet_LineTrace.BP_SingleBullet_LineTrace_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SingleBullet_LineTrace_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SingleBullet_LineTrace_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

