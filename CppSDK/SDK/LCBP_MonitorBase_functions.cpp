#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LCBP_MonitorBase

#include "Basic.hpp"

#include "LCBP_MonitorBase_classes.hpp"
#include "LCBP_MonitorBase_parameters.hpp"


namespace SDK
{

// Function LCBP_MonitorBase.LCBP_MonitorBase_C.SetDefaultDisplayAndTextColor
// (Private, BlueprintCallable, BlueprintEvent)

void ALCBP_MonitorBase_C::SetDefaultDisplayAndTextColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "SetDefaultDisplayAndTextColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.PlayBuyAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ALCBP_MonitorBase_C::PlayBuyAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "PlayBuyAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.SetTextAndIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UTexture*                         Icon_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  IconScale_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableText                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_MonitorBase_C::SetTextAndIcon(const class FText& Text, class UTexture* Icon_0, double IconScale_0, bool DisableText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "SetTextAndIcon");

	Params::LCBP_MonitorBase_C_SetTextAndIcon Parms{};

	Parms.Text = std::move(Text);
	Parms.Icon_0 = Icon_0;
	Parms.IconScale_0 = IconScale_0;
	Parms.DisableText = DisableText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.SetActivateMonitor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_MonitorBase_C::SetActivateMonitor(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "SetActivateMonitor");

	Params::LCBP_MonitorBase_C_SetActivateMonitor Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.TL_Rotation__FinishedFunc
// (BlueprintEvent)

void ALCBP_MonitorBase_C::TL_Rotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "TL_Rotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.TL_Rotation__UpdateFunc
// (BlueprintEvent)

void ALCBP_MonitorBase_C::TL_Rotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "TL_Rotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALCBP_MonitorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.Play
// (BlueprintCallable, BlueprintEvent)

void ALCBP_MonitorBase_C::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "Play");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_MonitorBase.LCBP_MonitorBase_C.ExecuteUbergraph_LCBP_MonitorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_MonitorBase_C::ExecuteUbergraph_LCBP_MonitorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_MonitorBase_C", "ExecuteUbergraph_LCBP_MonitorBase");

	Params::LCBP_MonitorBase_C_ExecuteUbergraph_LCBP_MonitorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

