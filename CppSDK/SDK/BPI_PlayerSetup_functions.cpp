#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerSetup

#include "Basic.hpp"

#include "BPI_PlayerSetup_classes.hpp"
#include "BPI_PlayerSetup_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerSetup.BPI_PlayerSetup_C.CheckWeaponIsLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsLoaded                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerSetup_C::CheckWeaponIsLoaded(bool* IsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "CheckWeaponIsLoaded");

	Params::BPI_PlayerSetup_C_CheckWeaponIsLoaded Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsLoaded != nullptr)
		*IsLoaded = Parms.IsLoaded;
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.EndTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerSetup_C::EndTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "EndTutorial");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.GetCurrentAmmoFromPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<EWeaponSelector, struct FStr_CurrentAmmo>*CurrentAmmo                                            (Parm, OutParm)

void IBPI_PlayerSetup_C::GetCurrentAmmoFromPlayer(TMap<EWeaponSelector, struct FStr_CurrentAmmo>* CurrentAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "GetCurrentAmmoFromPlayer");

	Params::BPI_PlayerSetup_C_GetCurrentAmmoFromPlayer Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (CurrentAmmo != nullptr)
		*CurrentAmmo = std::move(Parms.CurrentAmmo);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.RefreshWeaponCustomData
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerSetup_C::RefreshWeaponCustomData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "RefreshWeaponCustomData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.SetCurrentAmmoToPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<EWeaponSelector, struct FStr_CurrentAmmo>&CurrentAmmo                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void IBPI_PlayerSetup_C::SetCurrentAmmoToPlayer(const TMap<EWeaponSelector, struct FStr_CurrentAmmo>& CurrentAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "SetCurrentAmmoToPlayer");

	Params::BPI_PlayerSetup_C_SetCurrentAmmoToPlayer Parms{};

	Parms.CurrentAmmo = std::move(CurrentAmmo);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.SetPlayerInHole
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerSetup_C::SetPlayerInHole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "SetPlayerInHole");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.SetupSkillBySaveData
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerSetup_C::SetupSkillBySaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "SetupSkillBySaveData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerSetup.BPI_PlayerSetup_C.UpdateSavePopup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_SaveState                            SaveState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerSetup_C::UpdateSavePopup(EN_SaveState SaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerSetup_C", "UpdateSavePopup");

	Params::BPI_PlayerSetup_C_UpdateSavePopup Parms{};

	Parms.SaveState = SaveState;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

