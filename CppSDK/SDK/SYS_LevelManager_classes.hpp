#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SYS_LevelManager

#include "Basic.hpp"

#include "EN_SpawnCombatType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Str_DebugLogSetting_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Str_SpawnListData_structs.hpp"
#include "EN_NPCLogicPattern_structs.hpp"
#include "EN_Faction_structs.hpp"
#include "EN_ShootingLevel_structs.hpp"
#include "WeaponSelector_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SYS_LevelManager.SYS_LevelManager_C
// 0x05B0 (0x0858 - 0x02A8)
class ASYS_LevelManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_ScoreManager_C*                    BPC_ScoreManager;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       NavSpline;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPlayerHUD;                                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNoResultUI;                                      // 0x02C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpenAreaSelectMode;                              // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isLightModulAllOff;                                // 0x02CB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableUpdateFridgeProgress;                        // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  NextLevel;                                         // 0x02D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UWorld>                  CurrentLevel;                                      // 0x02F8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Debug_DoNotRandomSpawnPlayer;                      // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_DoNotUseDB;                                  // 0x0321(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_SimulateMode;                                // 0x0322(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323[0x1];                                      // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LevelDataRowName;                                  // 0x0324(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             LevelDataTable;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         SpawnHole_Amount;                                  // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStr_SpawnListData>             SpawnNPC_AllTimeSpawnData;                         // 0x0340(0x0010)(Edit, BlueprintVisible)
	struct FStr_SpawnListData                     SpawnNPC_CompareTarget;                            // 0x0350(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<class UClass*, double>                   SpawnNPC_SpawnData;                                // 0x03A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EN_Faction, uint8>                       SpawnNPC_Amount_LimitByFaction;                    // 0x03F8(0x0050)(Edit, BlueprintVisible)
	uint8                                         SpawnNPC_Amount_TempLimit;                         // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SpawnNPC_Amount_StartLimit;                        // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SpawnNPC_Amount_EndLimit;                          // 0x044A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SpawnNPC_OneSpawnMax;                              // 0x044B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_SpawnCombatType                            SpawnNPC_CombatType;                               // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnNPC_WeaponLightLimit;                         // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnNPC_WeaponLight_CurrentTotal;                 // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SpawnNPC_CurrentTotal;                             // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EN_Faction, uint8>                       SpawnNPC_FactionSpawnLimitMapXXXX;                 // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        SpawnNPC_RootSpawnerDistance_Min;                  // 0x04B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnNPC_ChildSpawnerDistance_Max;                 // 0x04B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnNPC_Interval_Base;                            // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnNPC_Interval_RandomRange;                     // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnNPC_UnSpawnableDistanceToPlayer;              // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnInterval;                                     // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnTime;                                         // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALCBP_Hole_C*>                   Holes;                                             // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ALCBP_Hole_C*>                   SpawnedHoles;                                      // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ALCBP_Hole_C*                           ActiveHole;                                        // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SpawnNavTimer;                                     // 0x0510(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_DebugLogSetting                   DebugLogSetting;                                   // 0x0518(0x0006)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51E[0x2];                                      // 0x051E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      Hole_OffLoopAttanuation;                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ALCBP_EnemySpawner_C*>           EnemySpawners;                                     // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class USpawnData_C*                           EnemySpawnData;                                    // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DropItem_TimeLimit;                                // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DropCashData_Multiplier;                           // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DropCashData_HeadShotBonusMultiplier;              // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ItemBox_SpawnAmount_Max;                           // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ItemBox_SpawnAmount_Min;                           // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x6];                                      // 0x055A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftClassPtr<class UClass>, double>     ItemBox_SpawnRate;                                 // 0x0560(0x0050)(Edit, BlueprintVisible)
	TMap<struct FVector, class FName>             ItemBoxSpawnerData;                                // 0x05B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FVector, class FName>             TaskItemSpawnerData;                               // 0x0600(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUIM_Results_C*                         ResultsUI;                                         // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSet<class FName>                             TaskDropItems;                                     // 0x0658(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FName>                             TaskSpawnItems;                                    // 0x06A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ObjectManagerBase_C*                ObjectInstance;                                    // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ObjectManagerClass;                                // 0x0700(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEvent_OBJ002LightOFF;                            // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpenObject;                                      // 0x0709(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           GameTimer;                                         // 0x0710(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              GameTimeSpan;                                      // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              GameStartTime;                                     // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class ALCBP_EnemySpawner_C*, EN_Faction> SpawnerAndFactionMap;                              // 0x0728(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class FName, double>                     _OnceItemDropRate;                                 // 0x0778(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        OnceItemDropRateTotal;                             // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALCBP_FridgeSpawner_C*>          FridgeSpawners;                                    // 0x07D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ALCBP_Fridge_C*                         Fridge;                                            // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpawnFridgeRowName;                                // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartEndTimeAlpha;                                 // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WaveCount;                                         // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreCompareTargetStartTime;                         // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      SpawnedNPCCounts;                                  // 0x0808(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AdjustRate(const TMap<TSoftClassPtr<class UClass>, double>& Rate, TMap<TSoftClassPtr<class UClass>, double>* AdjustRate_0);
	void CheckTotalWeaponLight(bool* CanLightON);
	void CountTime();
	void CountWeaponLight(int32 Amount);
	void DownAllNPC();
	void DropBlueprint(class FName NPCRowName, const struct FVector& KillLocation);
	void DropCash_SetAmount(int32 Cash, const struct FVector& DropLocation, const struct FVector& KillDirection, const struct FVector& HitPosition);
	void DropCashItem(bool IsHeadShotKill, const struct FVector& KillLocation, const struct FVector& KillDirection, const struct FVector& HitPosition, class FName NPCRowName, EN_ShootingLevel NPCShootingLevel);
	void DropData_SetAmount(int32 Cash, const struct FVector& DropLocation, const struct FVector& KillDirection, const struct FVector& HitPosition);
	void DropDataItem(bool IsHeadShotKill, const struct FVector& KillLocation, const struct FVector& KillDirection, const struct FVector& HitPosition, class FName NPCRowName, EN_ShootingLevel NPCShootingLevel);
	void DropOnceItem(const struct FVector& KillLocation);
	void DropTaskItem(bool IsHeadShot, const struct FVector& KillLocation, class FName NPCRowName);
	void ExecuteUbergraph_SYS_LevelManager(int32 EntryPoint);
	void GetAllHole();
	void GetCurrentTimeSecond(double* Secconds);
	void GetHoleLocation(struct FVector* HoleLocation);
	void InitializeByDB();
	void InitializeEnemySpawner();
	void InitializeFridgeSpawner();
	void InitializeHomeFacility();
	void InitializeNPCSpawnSystem();
	void InitializeOnceItemDropSystem();
	void InitializePlayerEquipWeapon();
	void InitializePlayerSkill();
	void InitializeTaskItem();
	void KillCount(bool IsHeadShotKill, const struct FVector& HitPosition, const struct FVector& KillLocation, const struct FVector& KillDirection, class FName NPCRowName, EN_ShootingLevel SootingLevel, int32 Hit, bool IsAddKillLog);
	void LateSetup();
	void LoadCurrentAmmo();
	void MakeSpawnerAndFactionMap(uint8 MaxSpawnAmount);
	void NextLevelNoRsltUI();
	void ObjectDestroyCount(class FName ObjectRowName, const struct FVector& DestroyLocation, const struct FVector& DestroyDirection, const struct FVector& HiitPosition, bool IsHeadShot, int32 Hit);
	void Open_ResultsUI();
	void OpenResults(bool IsGameOver);
	void ReBeginPlay();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RespawnFridge();
	void SelectNPCSpawnData(EN_Faction Faction, bool* Success);
	void SelectNPCSpawnData_OLD(EN_Faction Faction, bool* Success);
	void SetupHole();
	void SpawnItemBox();
	void SpawnNavItem();
	void SpawnPlayer();
	void SpawnTaskItems();
	void StartNavigation();
	void StartObjectEvent();
	void StartRush();
	void StopNavigation();
	void UpdateEnemySpawner(double DeltaSeconds);
	void UpdateFridge();
	void UpdateNavigation();
	void UpdateNPCLimit();
	void UpdateNPCSpawnDataList();
	void UpdateNPCSpawnDataListByTime(int32 CurrentTime_Second);
	void UpdateNPCSpawnSystem(double DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("SYS_LevelManager_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SYS_LevelManager_C")
	}
	static class ASYS_LevelManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASYS_LevelManager_C>();
	}
};
DUMPER7_ASSERTS_ASYS_LevelManager_C;

}

