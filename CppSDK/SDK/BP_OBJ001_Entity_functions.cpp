#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OBJ001_Entity

#include "Basic.hpp"

#include "BP_OBJ001_Entity_classes.hpp"
#include "BP_OBJ001_Entity_parameters.hpp"


namespace SDK
{

// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.BndEvt__BP_OBJ001_Entity_Box_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_OBJ001_Entity_C::BndEvt__BP_OBJ001_Entity_Box_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "BndEvt__BP_OBJ001_Entity_Box_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");

	Params::BP_OBJ001_Entity_C_BndEvt__BP_OBJ001_Entity_Box_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.BulletHitEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitStunPower                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Damage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Stun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Time                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DoT_Interval                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPenetrated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitBoneName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   AttackLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ShooterActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        HitSurfaceType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMultipleShot                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ShotID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AmmoRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::BulletHitEvent(const struct FVector& HitLocation, const struct FVector& HitDirection, double HitDamage, double HitStunPower, double DoT_Damage, double DoT_Stun, double DoT_Time, double DoT_Interval, bool IsPenetrated, class FName HitBoneName, const struct FVector& AttackLocation, class AActor* ShooterActor, EPhysicalSurface HitSurfaceType, bool IsMultipleShot, class FName ShotID, class FName AmmoRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "BulletHitEvent");

	Params::BP_OBJ001_Entity_C_BulletHitEvent Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitDirection = std::move(HitDirection);
	Parms.HitDamage = HitDamage;
	Parms.HitStunPower = HitStunPower;
	Parms.DoT_Damage = DoT_Damage;
	Parms.DoT_Stun = DoT_Stun;
	Parms.DoT_Time = DoT_Time;
	Parms.DoT_Interval = DoT_Interval;
	Parms.IsPenetrated = IsPenetrated;
	Parms.HitBoneName = HitBoneName;
	Parms.AttackLocation = std::move(AttackLocation);
	Parms.ShooterActor = ShooterActor;
	Parms.HitSurfaceType = HitSurfaceType;
	Parms.IsMultipleShot = IsMultipleShot;
	Parms.ShotID = ShotID;
	Parms.AmmoRowName = AmmoRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_OBJ001_Entity_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.Death
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CountKill                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::Death(bool CountKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "Death");

	Params::BP_OBJ001_Entity_C_Death Parms{};

	Parms.CountKill = CountKill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.DoTEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stun                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttackerRowName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AmmoRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::DoTEvent(double Damage, double Stun, class FName AttackerRowName, class FName AmmoRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "DoTEvent");

	Params::BP_OBJ001_Entity_C_DoTEvent Parms{};

	Parms.Damage = Damage;
	Parms.Stun = Stun;
	Parms.AttackerRowName = AttackerRowName;
	Parms.AmmoRowName = AmmoRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.ExecuteUbergraph_BP_OBJ001_Entity
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::ExecuteUbergraph_BP_OBJ001_Entity(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "ExecuteUbergraph_BP_OBJ001_Entity");

	Params::BP_OBJ001_Entity_C_ExecuteUbergraph_BP_OBJ001_Entity Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.GetHeadLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         HeadLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::GetHeadLocation(struct FVector* HeadLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "GetHeadLocation");

	Params::BP_OBJ001_Entity_C_GetHeadLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HeadLocation != nullptr)
		*HeadLocation = std::move(Parms.HeadLocation);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.GetNPCRowName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName*                            NPCRowName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::GetNPCRowName(class FName* NPCRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "GetNPCRowName");

	Params::BP_OBJ001_Entity_C_GetNPCRowName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NPCRowName != nullptr)
		*NPCRowName = Parms.NPCRowName;
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.IsDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDown_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::IsDown(bool* IsDown_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "IsDown");

	Params::BP_OBJ001_Entity_C_IsDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDown_0 != nullptr)
		*IsDown_0 = Parms.IsDown_0;
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OBJ001_Entity_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "ReceiveTick");

	Params::BP_OBJ001_Entity_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.RefreshAITask
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OBJ001_Entity_C::RefreshAITask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "RefreshAITask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.StartRush
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OBJ001_Entity_C::StartRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "StartRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OBJ001_Entity.BP_OBJ001_Entity_C.WeaponLightControl
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           LightONArea                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_OBJ001_Entity_C::WeaponLightControl(bool In, class AActor* LightONArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OBJ001_Entity_C", "WeaponLightControl");

	Params::BP_OBJ001_Entity_C_WeaponLightControl Parms{};

	Parms.In = In;
	Parms.LightONArea = LightONArea;

	UObject::ProcessEvent(Func, &Parms);
}

}

