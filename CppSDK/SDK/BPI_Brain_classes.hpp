#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Brain

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "EN_ShootingLevel_structs.hpp"
#include "EN_NPCRole_structs.hpp"
#include "EN_NPCLogicPattern_structs.hpp"
#include "EN_CombatType_structs.hpp"
#include "EN_MoveTaskName_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "EN_GunFirePattern_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_Brain.BPI_Brain_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_Brain_C final
{
public:
	void BoltCatchRelease();
	void ChamberAction();
	void ChangeMoveSpeed(EALS_Gait MoveSpeed);
	void FireOFF();
	void FireON(EN_GunFirePattern GunFirePattern);
	void GetCanTaskExecute(bool* CanExecute);
	void GetCombatMoveStyle(EALS_Gait* CombatMoveStyle);
	void GetFocusTargetActor(class AActor** FocusTargetActor, bool* Success);
	void GetNeedUpdateTask(bool* NeedUpdateMoveTask, bool* NeedUpdateCombatTask);
	void GetSearchSetting(struct FVector* SearchPosition, EALS_Gait* SearchingMoveStyle);
	void GetTask(class UMTask_Base_C** MoveTask, class UCTask_Base_C** CombatTask);
	void GetWaitPosition(struct FVector* WaitPosition);
	void InitializeBrain(class AAI_NPCBase_C* AIController, class UBPC_AiDepthScaner_C* AiDepthScaner, EN_MoveTaskName FirstMoveTask);
	void IsDeadBrain(bool* IsDead);
	void MeleeAttack();
	void ReloadAmmo();
	void ResetComponentParam(EN_NPCLogicPattern LogicPattern, EN_CombatType CombatType, EN_ShootingLevel ShootingLevel, EN_NPCRole RoleType);
	void SendDeadEvent();
	void SetFoundActor(bool isFoundActor, class AActor* FoundActor);
	void SetHearingInfo(bool HeardSomething, const struct FVector& HearingLocation);
	void SetOnDamage(const struct FVector& EventLocation);
	void StopTaskExecute();
	void UpdateBrainData(double DeltaSeconds);
	void UpdateFocusActorLocationMemory();
	void UpdateFocusLocation(double DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPI_Brain_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPI_Brain_C")
	}
	static class IBPI_Brain_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_Brain_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IBPI_Brain_C;

}

