#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Ammo

#include "Basic.hpp"

#include "BPI_Ammo_classes.hpp"
#include "BPI_Ammo_parameters.hpp"


namespace SDK
{

// Function BPI_Ammo.BPI_Ammo_C.Ammo_Clear
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Ammo_C::Ammo_Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Ammo_C", "Ammo_Clear");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_Ammo.BPI_Ammo_C.Ammo_Drop
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Ammo_C::Ammo_Drop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Ammo_C", "Ammo_Drop");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_Ammo.BPI_Ammo_C.Ammo_EjectShell
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   WeaponVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  EjectDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsManualUnload                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EjectPower                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Ammo_C::Ammo_EjectShell(const struct FVector& WeaponVelocity, class UArrowComponent* EjectDirection, bool IsManualUnload, double EjectPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Ammo_C", "Ammo_EjectShell");

	Params::BPI_Ammo_C_Ammo_EjectShell Parms{};

	Parms.WeaponVelocity = std::move(WeaponVelocity);
	Parms.EjectDirection = EjectDirection;
	Parms.IsManualUnload = IsManualUnload;
	Parms.EjectPower = EjectPower;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Ammo.BPI_Ammo_C.Ammo_Fire
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Ammo_C::Ammo_Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Ammo_C", "Ammo_Fire");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}

