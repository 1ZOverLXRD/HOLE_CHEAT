#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LCBP_YellowSign

#include "Basic.hpp"

#include "LCBP_YellowSign_classes.hpp"
#include "LCBP_YellowSign_parameters.hpp"


namespace SDK
{

// Function LCBP_YellowSign.LCBP_YellowSign_C.TL_BuildUp__FinishedFunc
// (BlueprintEvent)

void ALCBP_YellowSign_C::TL_BuildUp__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "TL_BuildUp__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.TL_BuildUp__UpdateFunc
// (BlueprintEvent)

void ALCBP_YellowSign_C::TL_BuildUp__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "TL_BuildUp__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.InteractInOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void ALCBP_YellowSign_C::InteractInOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "InteractInOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.InteractOutOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void ALCBP_YellowSign_C::InteractOutOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "InteractOutOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_YellowSign_C::Interact(class AActor* Actor, int32 SelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "Interact");

	Params::LCBP_YellowSign_C_Interact Parms{};

	Parms.Actor = Actor;
	Parms.SelectIndex = SelectIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_YellowSign_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "ReceiveTick");

	Params::LCBP_YellowSign_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALCBP_YellowSign_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LCBP_YellowSign.LCBP_YellowSign_C.ExecuteUbergraph_LCBP_YellowSign
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALCBP_YellowSign_C::ExecuteUbergraph_LCBP_YellowSign(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LCBP_YellowSign_C", "ExecuteUbergraph_LCBP_YellowSign");

	Params::LCBP_YellowSign_C_ExecuteUbergraph_LCBP_YellowSign Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

