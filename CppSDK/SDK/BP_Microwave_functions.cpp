#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Microwave

#include "Basic.hpp"

#include "BP_Microwave_classes.hpp"
#include "BP_Microwave_parameters.hpp"


namespace SDK
{

// Function BP_Microwave.BP_Microwave_C.DoorOpen__FinishedFunc
// (BlueprintEvent)

void ABP_Microwave_C::DoorOpen__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "DoorOpen__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.DoorOpen__UpdateFunc
// (BlueprintEvent)

void ABP_Microwave_C::DoorOpen__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "DoorOpen__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.End
// (BlueprintCallable, BlueprintEvent)

void ABP_Microwave_C::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.ExecuteUbergraph_BP_Microwave
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Microwave_C::ExecuteUbergraph_BP_Microwave(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "ExecuteUbergraph_BP_Microwave");

	Params::BP_Microwave_C_ExecuteUbergraph_BP_Microwave Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Microwave.BP_Microwave_C.PopDug
// (BlueprintCallable, BlueprintEvent)

void ABP_Microwave_C::PopDug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "PopDug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.PopDugF
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Microwave_C::PopDugF(double Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "PopDugF");

	Params::BP_Microwave_C_PopDugF Parms{};

	Parms.Power = Power;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Microwave.BP_Microwave_C.PopDugsInit
// (BlueprintCallable, BlueprintEvent)

void ABP_Microwave_C::PopDugsInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "PopDugsInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Microwave_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Microwave_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "ReceiveTick");

	Params::BP_Microwave_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Microwave.BP_Microwave_C.SpawnFixedDugs
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Microwave_C::SpawnFixedDugs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "SpawnFixedDugs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.Start
// (BlueprintCallable, BlueprintEvent)

void ABP_Microwave_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.TL_DugsPop__FinishedFunc
// (BlueprintEvent)

void ABP_Microwave_C::TL_DugsPop__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "TL_DugsPop__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.TL_DugsPop__PopEvent__EventFunc
// (BlueprintEvent)

void ABP_Microwave_C::TL_DugsPop__PopEvent__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "TL_DugsPop__PopEvent__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.TL_DugsPop__UpdateFunc
// (BlueprintEvent)

void ABP_Microwave_C::TL_DugsPop__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "TL_DugsPop__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.UpDownMove__FinishedFunc
// (BlueprintEvent)

void ABP_Microwave_C::UpDownMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "UpDownMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Microwave.BP_Microwave_C.UpDownMove__UpdateFunc
// (BlueprintEvent)

void ABP_Microwave_C::UpDownMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Microwave_C", "UpDownMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

