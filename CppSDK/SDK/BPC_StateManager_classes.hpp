#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_StateManager

#include "Basic.hpp"

#include "Str_DoT_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EN_Faction_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_StateManager.BPC_StateManager_C
// 0x00A8 (0x0148 - 0x00A0)
class UBPC_StateManager_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EN_Faction                                    Faction;                                           // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxHP;                                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HP;                                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxStamina;                                        // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stamina;                                           // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMoveSpeed;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_Base_CharacterBP_C*                Owner;                                             // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Hit;                                               // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RegenerateHP_StartTime;                            // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RegenerateHP_HealValue;                            // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RegenerateHP_HealLimit;                            // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RegenerateHP_Timer;                                // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              RegenerateHP_Call;                                 // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              HealHP_Call;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsIndoor;                                          // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRegenerateStamina;                               // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStr_DoT>                       DoTs;                                              // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                        DoT_Sound;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInHole;                                          // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DamageByDoT(double Damage, double Stun, class FName AttackerRowName);
	void UpdateDoT(double Delta);
	void AddDoT(double DoT_Damage, double DoT_Stun, double DoT_Time, double DoT_Interval, class FName AttackerRowName);
	void GetIsIndoor(bool* IsIndoor_0);
	void SetIsIndoor(bool IsIndoor_0);
	void HealHP(double Heal_Amount);
	void HitCount();
	void GetHitCount(int32* Hit_0);
	void RegenerateHP_Stop();
	void RegenerateHP_Core();
	void RegenerateHP_Start();
	void UpdateMoveSpeed(double MoveSpeedMultiplier);
	void DeadCheck(bool* IsDead_0);
	void StopStaminaRegeneration();
	void RegenerateStamina();
	void StaminaDamage(double StunPower);
	void Damage(double Damage_0, bool* IsDead_0);
	void InitializeStateManager(EN_Faction Faction_0, double MaxHP_0, double MaxStamina_0);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BPC_StateManager(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPC_StateManager_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPC_StateManager_C")
	}
	static class UBPC_StateManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_StateManager_C>();
	}
};
DUMPER7_ASSERTS_UBPC_StateManager_C;

}

