#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugTextRender

#include "Basic.hpp"

#include "BP_DebugTextRender_classes.hpp"
#include "BP_DebugTextRender_parameters.hpp"


namespace SDK
{

// Function BP_DebugTextRender.BP_DebugTextRender_C.ExecuteUbergraph_BP_DebugTextRender
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugTextRender_C::ExecuteUbergraph_BP_DebugTextRender(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugTextRender_C", "ExecuteUbergraph_BP_DebugTextRender");

	Params::BP_DebugTextRender_C_ExecuteUbergraph_BP_DebugTextRender Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugTextRender.BP_DebugTextRender_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DebugTextRender_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugTextRender_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugTextRender.BP_DebugTextRender_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugTextRender_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugTextRender_C", "ReceiveTick");

	Params::BP_DebugTextRender_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugTextRender.BP_DebugTextRender_C.SetTextAndColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FColor&                    Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugTextRender_C::SetTextAndColor(const class FText& Text, const struct FColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugTextRender_C", "SetTextAndColor");

	Params::BP_DebugTextRender_C_SetTextAndColor Parms{};

	Parms.Text = std::move(Text);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}

}

