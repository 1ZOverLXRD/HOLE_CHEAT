#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_TaskMakerXXX

#include "Basic.hpp"

#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "EN_CombatTaskName_structs.hpp"
#include "EN_MoveTaskName_structs.hpp"
#include "EN_NPCLogicPattern_structs.hpp"
#include "EN_Faction_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_TaskMakerXXX.BTTask_TaskMakerXXX_C
// 0x0010 (0x00B8 - 0x00A8)
class UBTTask_TaskMakerXXX_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_AiBrain_C*                         Ai_Brain;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void CT_Melee_Brave(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Melee_Coward(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Melee_Funny(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Melee_Normal(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Melee_Smart(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Shooter_Brave(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Shooter_Coward(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Shooter_Funny(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Shooter_Normal(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CT_Shooter_Smart(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void CustomTask(EN_MoveTaskName* MoveTaskName, EN_CombatTaskName* CombatTaskName);
	void ExecuteUbergraph_BTTask_TaskMakerXXX(int32 EntryPoint);
	void MakeMoveTask(EN_MoveTaskName MoveTaskName, class UMTask_Base_C** MoveTask);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BTTask_TaskMakerXXX_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_TaskMakerXXX_C")
	}
	static class UBTTask_TaskMakerXXX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_TaskMakerXXX_C>();
	}
};
DUMPER7_ASSERTS_UBTTask_TaskMakerXXX_C;

}

