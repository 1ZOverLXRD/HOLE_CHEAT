#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HttpBlueprint

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "HttpBlueprint_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class HttpBlueprint.HttpBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UHttpBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddHeader(struct FHttpHeader& HeaderObject, const class FString& NewHeader, const class FString& NewHeaderValue);
	static TArray<class FString> GetAllHeaders(const struct FHttpHeader& HeaderObject);
	static TMap<class FString, class FString> GetAllHeaders_Map(const struct FHttpHeader& HeaderObject);
	static bool GetHeaderValue(const struct FHttpHeader& HeaderObject, const class FString& HeaderName, class FString* OutHeaderValue);
	static void MakeRequestHeader(const TMap<class FString, class FString>& Headers, struct FHttpHeader* OutHeader);
	static bool RemoveHeader(struct FHttpHeader& HeaderObject, const class FString& HeaderToRemove);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HttpBlueprintFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HttpBlueprintFunctionLibrary")
	}
	static class UHttpBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHttpBlueprintFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UHttpBlueprintFunctionLibrary;

// Class HttpBlueprint.HttpRequestProxyObject
// 0x0060 (0x0088 - 0x0028)
class UHttpRequestProxyObject final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Response, bool bSuccessful, const struct FHttpHeader& OutHeader)> OnRequestComplete; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FHttpHeader                            CachedHeader;                                      // 0x0038(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UHttpRequestProxyObject* CreateHttpRequestProxyObject(const class FString& InUrl, const class FString& InVerb, const struct FHttpHeader& InHeader, const class FString& InBody);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HttpRequestProxyObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HttpRequestProxyObject")
	}
	static class UHttpRequestProxyObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHttpRequestProxyObject>();
	}
};
DUMPER7_ASSERTS_UHttpRequestProxyObject;

}

