#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingTimeBoard

#include "Basic.hpp"

#include "BP_ShootingTimeBoard_classes.hpp"
#include "BP_ShootingTimeBoard_parameters.hpp"


namespace SDK
{

// Function BP_ShootingTimeBoard.BP_ShootingTimeBoard_C.ClearTimeRecord
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ShootingTimeBoard_C::ClearTimeRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingTimeBoard_C", "ClearTimeRecord");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingTimeBoard.BP_ShootingTimeBoard_C.ExecuteUbergraph_BP_ShootingTimeBoard
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingTimeBoard_C::ExecuteUbergraph_BP_ShootingTimeBoard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingTimeBoard_C", "ExecuteUbergraph_BP_ShootingTimeBoard");

	Params::BP_ShootingTimeBoard_C_ExecuteUbergraph_BP_ShootingTimeBoard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShootingTimeBoard.BP_ShootingTimeBoard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ShootingTimeBoard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingTimeBoard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingTimeBoard.BP_ShootingTimeBoard_C.SetTimeRecord
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<double>&                         Record                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_ShootingTimeBoard_C::SetTimeRecord(TArray<double>& Record)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingTimeBoard_C", "SetTimeRecord");

	Params::BP_ShootingTimeBoard_C_SetTimeRecord Parms{};

	Parms.Record = std::move(Record);

	UObject::ProcessEvent(Func, &Parms);

	Record = std::move(Parms.Record);
}

}

