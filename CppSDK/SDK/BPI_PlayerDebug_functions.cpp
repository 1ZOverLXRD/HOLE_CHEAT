#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerDebug

#include "Basic.hpp"

#include "BPI_PlayerDebug_classes.hpp"
#include "BPI_PlayerDebug_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerDebug.BPI_PlayerDebug_C.GetDebugMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_DebugMode*                           DebugMode                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::GetDebugMode(EN_DebugMode* DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "GetDebugMode");

	Params::BPI_PlayerDebug_C_GetDebugMode Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (DebugMode != nullptr)
		*DebugMode = Parms.DebugMode;
}


// Function BPI_PlayerDebug.BPI_PlayerDebug_C.SetDebugCameraMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_Camera                               CameraPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::SetDebugCameraMode(EN_Camera CameraPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "SetDebugCameraMode");

	Params::BPI_PlayerDebug_C_SetDebugCameraMode Parms{};

	Parms.CameraPosition = CameraPosition;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerDebug.BPI_PlayerDebug_C.SetDebugMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_DebugMode                            DebugMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::SetDebugMode(EN_DebugMode DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "SetDebugMode");

	Params::BPI_PlayerDebug_C_SetDebugMode Parms{};

	Parms.DebugMode = DebugMode;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerDebug.BPI_PlayerDebug_C.SetDebugPlayerVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::SetDebugPlayerVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "SetDebugPlayerVisibility");

	Params::BPI_PlayerDebug_C_SetDebugPlayerVisibility Parms{};

	Parms.IsVisible = IsVisible;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerDebug.BPI_PlayerDebug_C.SetShootingTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Timer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::SetShootingTimer(class AActor* Timer, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "SetShootingTimer");

	Params::BPI_PlayerDebug_C_SetShootingTimer Parms{};

	Parms.Timer = Timer;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPI_PlayerDebug.BPI_PlayerDebug_C.SetSmoothCameraMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerDebug_C::SetSmoothCameraMove(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerDebug_C", "SetSmoothCameraMove");

	Params::BPI_PlayerDebug_C_SetSmoothCameraMove Parms{};

	Parms.Enable = Enable;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

