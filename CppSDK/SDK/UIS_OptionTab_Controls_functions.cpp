#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIS_OptionTab_Controls

#include "Basic.hpp"

#include "UIS_OptionTab_Controls_classes.hpp"
#include "UIS_OptionTab_Controls_parameters.hpp"


namespace SDK
{

// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.CloseWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::CloseWidget(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "CloseWidget");

	Params::UIS_OptionTab_Controls_C_CloseWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.ExecuteUbergraph_UIS_OptionTab_Controls
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::ExecuteUbergraph_UIS_OptionTab_Controls(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "ExecuteUbergraph_UIS_OptionTab_Controls");

	Params::UIS_OptionTab_Controls_C_ExecuteUbergraph_UIS_OptionTab_Controls Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.FocusMoveDownOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UUIS_OptionTab_Controls_C::FocusMoveDownOut(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "FocusMoveDownOut");

	Params::UIS_OptionTab_Controls_C_FocusMoveDownOut Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.FocusMoveUpOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UUIS_OptionTab_Controls_C::FocusMoveUpOut(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "FocusMoveUpOut");

	Params::UIS_OptionTab_Controls_C_FocusMoveUpOut Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.GetFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_WidgetFocusDirection                 MoveInDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget**                         FocusTargetWidget                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::GetFocusWidget(EN_WidgetFocusDirection MoveInDirection, class UWidget** FocusTargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "GetFocusWidget");

	Params::UIS_OptionTab_Controls_C_GetFocusWidget Parms{};

	Parms.MoveInDirection = MoveInDirection;

	UObject::ProcessEvent(Func, &Parms);

	if (FocusTargetWidget != nullptr)
		*FocusTargetWidget = Parms.FocusTargetWidget;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.GetSelectedValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Sensitivity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ADS_Sensitivity                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ADS_Sensitivity_Scope2x                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ADS_Sensitivity_Scope4x                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   InvertVerticalLook                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ToggleSprint                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ToggleWalk                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ToggleAim                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ToggleCrouch                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ToggleLean                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   EnableWeaponScroll                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   InvertWeaponScroll                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   MouseSmoothing                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   DisableControlAxisRotationInLean                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 GP_MovementDeadzone                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 GP_LookDeadzone                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 GP_ResponseCurve                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::GetSelectedValues(int32* Sensitivity, int32* ADS_Sensitivity, int32* ADS_Sensitivity_Scope2x, int32* ADS_Sensitivity_Scope4x, bool* InvertVerticalLook, bool* ToggleSprint, bool* ToggleWalk, bool* ToggleAim, bool* ToggleCrouch, bool* ToggleLean, bool* EnableWeaponScroll, bool* InvertWeaponScroll, bool* MouseSmoothing, bool* DisableControlAxisRotationInLean, double* GP_MovementDeadzone, double* GP_LookDeadzone, double* GP_ResponseCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "GetSelectedValues");

	Params::UIS_OptionTab_Controls_C_GetSelectedValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sensitivity != nullptr)
		*Sensitivity = Parms.Sensitivity;

	if (ADS_Sensitivity != nullptr)
		*ADS_Sensitivity = Parms.ADS_Sensitivity;

	if (ADS_Sensitivity_Scope2x != nullptr)
		*ADS_Sensitivity_Scope2x = Parms.ADS_Sensitivity_Scope2x;

	if (ADS_Sensitivity_Scope4x != nullptr)
		*ADS_Sensitivity_Scope4x = Parms.ADS_Sensitivity_Scope4x;

	if (InvertVerticalLook != nullptr)
		*InvertVerticalLook = Parms.InvertVerticalLook;

	if (ToggleSprint != nullptr)
		*ToggleSprint = Parms.ToggleSprint;

	if (ToggleWalk != nullptr)
		*ToggleWalk = Parms.ToggleWalk;

	if (ToggleAim != nullptr)
		*ToggleAim = Parms.ToggleAim;

	if (ToggleCrouch != nullptr)
		*ToggleCrouch = Parms.ToggleCrouch;

	if (ToggleLean != nullptr)
		*ToggleLean = Parms.ToggleLean;

	if (EnableWeaponScroll != nullptr)
		*EnableWeaponScroll = Parms.EnableWeaponScroll;

	if (InvertWeaponScroll != nullptr)
		*InvertWeaponScroll = Parms.InvertWeaponScroll;

	if (MouseSmoothing != nullptr)
		*MouseSmoothing = Parms.MouseSmoothing;

	if (DisableControlAxisRotationInLean != nullptr)
		*DisableControlAxisRotationInLean = Parms.DisableControlAxisRotationInLean;

	if (GP_MovementDeadzone != nullptr)
		*GP_MovementDeadzone = Parms.GP_MovementDeadzone;

	if (GP_LookDeadzone != nullptr)
		*GP_LookDeadzone = Parms.GP_LookDeadzone;

	if (GP_ResponseCurve != nullptr)
		*GP_ResponseCurve = Parms.GP_ResponseCurve;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.InitializeFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UUIS_OptionTab_Controls_C::InitializeFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "InitializeFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.IsOpened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::IsOpened(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "IsOpened");

	Params::UIS_OptionTab_Controls_C_IsOpened Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.SetPreWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          PreWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::SetPreWidget(class UWidget* PreWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "SetPreWidget");

	Params::UIS_OptionTab_Controls_C_SetPreWidget Parms{};

	Parms.PreWidget = PreWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIS_OptionTab_Controls.UIS_OptionTab_Controls_C.SetSelectedValues
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sensitivity                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ADS_Sensitivity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ADS_Sensitivity_Scope2x                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ADS_Sensitivity_Scope4x                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InvertVerticalLook                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToggleSprint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToggleWalk                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToggleAim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToggleCrouch                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToggleLean                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnableWeaponScroll                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InvertWeaponScroll                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MouseSmoothing                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableControlAxisRotationInLean                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GP_MovementDeadzone                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GP_LookDeadzone                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GP_ResponseCurve                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIS_OptionTab_Controls_C::SetSelectedValues(int32 Sensitivity, int32 ADS_Sensitivity, int32 ADS_Sensitivity_Scope2x, int32 ADS_Sensitivity_Scope4x, bool InvertVerticalLook, bool ToggleSprint, bool ToggleWalk, bool ToggleAim, bool ToggleCrouch, bool ToggleLean, bool EnableWeaponScroll, bool InvertWeaponScroll, bool MouseSmoothing, bool DisableControlAxisRotationInLean, double GP_MovementDeadzone, double GP_LookDeadzone, double GP_ResponseCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIS_OptionTab_Controls_C", "SetSelectedValues");

	Params::UIS_OptionTab_Controls_C_SetSelectedValues Parms{};

	Parms.Sensitivity = Sensitivity;
	Parms.ADS_Sensitivity = ADS_Sensitivity;
	Parms.ADS_Sensitivity_Scope2x = ADS_Sensitivity_Scope2x;
	Parms.ADS_Sensitivity_Scope4x = ADS_Sensitivity_Scope4x;
	Parms.InvertVerticalLook = InvertVerticalLook;
	Parms.ToggleSprint = ToggleSprint;
	Parms.ToggleWalk = ToggleWalk;
	Parms.ToggleAim = ToggleAim;
	Parms.ToggleCrouch = ToggleCrouch;
	Parms.ToggleLean = ToggleLean;
	Parms.EnableWeaponScroll = EnableWeaponScroll;
	Parms.InvertWeaponScroll = InvertWeaponScroll;
	Parms.MouseSmoothing = MouseSmoothing;
	Parms.DisableControlAxisRotationInLean = DisableControlAxisRotationInLean;
	Parms.GP_MovementDeadzone = GP_MovementDeadzone;
	Parms.GP_LookDeadzone = GP_LookDeadzone;
	Parms.GP_ResponseCurve = GP_ResponseCurve;

	UObject::ProcessEvent(Func, &Parms);
}

}

