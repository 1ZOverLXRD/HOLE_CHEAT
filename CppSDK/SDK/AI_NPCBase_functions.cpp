#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_NPCBase

#include "Basic.hpp"

#include "AI_NPCBase_classes.hpp"
#include "AI_NPCBase_parameters.hpp"


namespace SDK
{

// Function AI_NPCBase.AI_NPCBase_C.BndEvt__AI_NPCBase_AIPerception_K2Node_ComponentBoundEvent_3_PerceptionUpdatedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class AActor*>&            UpdatedActors                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AAI_NPCBase_C::BndEvt__AI_NPCBase_AIPerception_K2Node_ComponentBoundEvent_3_PerceptionUpdatedDelegate__DelegateSignature(const TArray<class AActor*>& UpdatedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "BndEvt__AI_NPCBase_AIPerception_K2Node_ComponentBoundEvent_3_PerceptionUpdatedDelegate__DelegateSignature");

	Params::AI_NPCBase_C_BndEvt__AI_NPCBase_AIPerception_K2Node_ComponentBoundEvent_3_PerceptionUpdatedDelegate__DelegateSignature Parms{};

	Parms.UpdatedActors = std::move(UpdatedActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.BoltCatchRelease
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::BoltCatchRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "BoltCatchRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.BoltCharging
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::BoltCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "BoltCharging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Burst__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Burst__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Burst__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Burst__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Burst__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Burst__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Double__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Double__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Double__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Double__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Double__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Double__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.ExecuteUbergraph_AI_NPCBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::ExecuteUbergraph_AI_NPCBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "ExecuteUbergraph_AI_NPCBase");

	Params::AI_NPCBase_C_ExecuteUbergraph_AI_NPCBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.FireStopTimerEvent
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::FireStopTimerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "FireStopTimerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.GetAIStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_NPCLogicPattern*                     LogicPattern                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_CombatType*                          CombatType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_ShootingLevel*                       ShootingLevel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::GetAIStatus(EN_NPCLogicPattern* LogicPattern, EN_CombatType* CombatType, EN_ShootingLevel* ShootingLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "GetAIStatus");

	Params::AI_NPCBase_C_GetAIStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LogicPattern != nullptr)
		*LogicPattern = Parms.LogicPattern;

	if (CombatType != nullptr)
		*CombatType = Parms.CombatType;

	if (ShootingLevel != nullptr)
		*ShootingLevel = Parms.ShootingLevel;
}


// Function AI_NPCBase.AI_NPCBase_C.GunFireControl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FireON                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_GunFirePattern                       GunFirePattern                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::GunFireControl(bool FireON, EN_GunFirePattern GunFirePattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "GunFireControl");

	Params::AI_NPCBase_C_GunFireControl Parms{};

	Parms.FireON = FireON;
	Parms.GunFirePattern = GunFirePattern;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.InitializeAI
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_MoveTaskName                         FirstMoveTask                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::InitializeAI(EN_MoveTaskName FirstMoveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "InitializeAI");

	Params::AI_NPCBase_C_InitializeAI Parms{};

	Parms.FirstMoveTask = FirstMoveTask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.Long__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Long__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Long__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Long__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Long__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Long__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Normal_3s__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Normal_3s__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Normal_3s__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Normal_3s__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Normal_3s__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Normal_3s__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.OnDamage_Known
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   AttackerLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::OnDamage_Known(const struct FVector& AttackerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "OnDamage_Known");

	Params::AI_NPCBase_C_OnDamage_Known Parms{};

	Parms.AttackerLocation = std::move(AttackerLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.Rapid__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Rapid__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Rapid__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Rapid__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Rapid__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Rapid__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AAI_NPCBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.RefreshAITask
// (Public, BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::RefreshAITask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "RefreshAITask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.ReloadControl
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::ReloadControl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "ReloadControl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.SendDeadEvent
// (Public, BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::SendDeadEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "SendDeadEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.SetAIStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_NPCLogicPattern                      LogicPattern                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_CombatType                           CombatType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_ShootingLevel                        ShootingLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_MoveTaskName                         FirstMoveTask                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_NPCRole                              RoleType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAI_NPCBase_C::SetAIStatus(EN_NPCLogicPattern LogicPattern, EN_CombatType CombatType, EN_ShootingLevel ShootingLevel, EN_MoveTaskName FirstMoveTask, EN_NPCRole RoleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "SetAIStatus");

	Params::AI_NPCBase_C_SetAIStatus Parms{};

	Parms.LogicPattern = LogicPattern;
	Parms.CombatType = CombatType;
	Parms.ShootingLevel = ShootingLevel;
	Parms.FirstMoveTask = FirstMoveTask;
	Parms.RoleType = RoleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AI_NPCBase.AI_NPCBase_C.Slow_1s__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Slow_1s__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Slow_1s__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Slow_1s__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Slow_1s__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Slow_1s__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Slow_2s__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Slow_2s__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Slow_2s__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.Slow_2s__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::Slow_2s__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "Slow_2s__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.StopFire
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::StopFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "StopFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_BoltCatchRelease__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_BoltCatchRelease__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_BoltCatchRelease__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_BoltCatchRelease__Release__EventFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_BoltCatchRelease__Release__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_BoltCatchRelease__Release__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_BoltCatchRelease__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_BoltCatchRelease__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_BoltCatchRelease__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_ChamberAction__FinishedFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_ChamberAction__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_ChamberAction__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_ChamberAction__PullBolt__EventFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_ChamberAction__PullBolt__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_ChamberAction__PullBolt__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_ChamberAction__ReleaseBolt__EventFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_ChamberAction__ReleaseBolt__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_ChamberAction__ReleaseBolt__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.TL_ChamberAction__UpdateFunc
// (BlueprintEvent)

void AAI_NPCBase_C::TL_ChamberAction__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "TL_ChamberAction__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AI_NPCBase.AI_NPCBase_C.UnlockStopFire
// (BlueprintCallable, BlueprintEvent)

void AAI_NPCBase_C::UnlockStopFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AI_NPCBase_C", "UnlockStopFire");

	UObject::ProcessEvent(Func, nullptr);
}

}

