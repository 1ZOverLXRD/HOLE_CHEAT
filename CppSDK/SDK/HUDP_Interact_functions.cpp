#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDP_Interact

#include "Basic.hpp"

#include "HUDP_Interact_classes.hpp"
#include "HUDP_Interact_parameters.hpp"


namespace SDK
{

// Function HUDP_Interact.HUDP_Interact_C.Close
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUDP_Interact_C::Close(bool IsAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "Close");

	Params::HUDP_Interact_C_Close Parms{};

	Parms.IsAnimation = IsAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDP_Interact.HUDP_Interact_C.GetTextsLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUDP_Interact_C::GetTextsLength(int32* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "GetTextsLength");

	Params::HUDP_Interact_C_GetTextsLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function HUDP_Interact.HUDP_Interact_C.MoveSelector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUDP_Interact_C::MoveSelector(bool IsUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "MoveSelector");

	Params::HUDP_Interact_C_MoveSelector Parms{};

	Parms.IsUp = IsUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDP_Interact.HUDP_Interact_C.Open
// (Public, BlueprintCallable, BlueprintEvent)

void UHUDP_Interact_C::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDP_Interact.HUDP_Interact_C.RefreshIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UHUDP_Interact_C::RefreshIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "RefreshIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDP_Interact.HUDP_Interact_C.SetTexts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_InteractUIText>&     Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UHUDP_Interact_C::SetTexts(TArray<struct FStr_InteractUIText>& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDP_Interact_C", "SetTexts");

	Params::HUDP_Interact_C_SetTexts Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	Text = std::move(Parms.Text);
}

}

