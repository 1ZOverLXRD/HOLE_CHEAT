#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EnemySpawner

#include "Basic.hpp"

#include "BPI_EnemySpawner_classes.hpp"
#include "BPI_EnemySpawner_parameters.hpp"


namespace SDK
{

// Function BPI_EnemySpawner.BPI_EnemySpawner_C.SetSpawnSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  SpawnableDistanceToPlayer                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SpawnTimeSpan                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemySpawner_C::SetSpawnSetting(double SpawnableDistanceToPlayer, double SpawnTimeSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_EnemySpawner_C", "SetSpawnSetting");

	Params::BPI_EnemySpawner_C_SetSpawnSetting Parms{};

	Parms.SpawnableDistanceToPlayer = SpawnableDistanceToPlayer;
	Parms.SpawnTimeSpan = SpawnTimeSpan;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_EnemySpawner.BPI_EnemySpawner_C.SpawnEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpawnData_C*                     SpawnData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemySpawner_C::SpawnEnemy(class USpawnData_C* SpawnData, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_EnemySpawner_C", "SpawnEnemy");

	Params::BPI_EnemySpawner_C_SpawnEnemy Parms{};

	Parms.SpawnData = SpawnData;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

