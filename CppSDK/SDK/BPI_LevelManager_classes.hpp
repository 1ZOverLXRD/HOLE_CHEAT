#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LevelManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "EN_ShootingLevel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_LevelManager.BPI_LevelManager_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_LevelManager_C final
{
public:
	void CheckTotalWeaponLight(bool* CanLightON);
	void CountWeaponLight(int32 Amount);
	void KillCount(bool IsHeadShotKill, const struct FVector& HitPosition, const struct FVector& KillLocation, const struct FVector& KillDirection, class FName NPCRowName, EN_ShootingLevel SootingLevel, int32 Hit, bool IsAddKillLog);
	void ObjectDestroyCount(class FName ObjectRowName, const struct FVector& DestroyLocation, const struct FVector& DestroyDirection, const struct FVector& HiitPosition, bool IsHeadShot, int32 Hit);
	void OpenResults(bool IsGameOver);
	void StartObjectEvent();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPI_LevelManager_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPI_LevelManager_C")
	}
	static class IBPI_LevelManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_LevelManager_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IBPI_LevelManager_C;

}

